<?php
/**
 * AlipayUserInfoShareResponseModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayUserInfoShareResponseModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayUserInfoShareResponseModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayUserInfoShareResponseModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'address' => 'string',
        'age' => 'string',
        'area' => 'string',
        'avatar' => 'string',
        'businessScope' => 'string',
        'certNo' => 'string',
        'certType' => 'string',
        'city' => 'string',
        'collegeName' => 'string',
        'countryCode' => 'string',
        'degree' => 'string',
        'deliverAddresses' => '\Alipay\OpenAPISDK\Model\AlipayUserDeliverAddress[]',
        'displayName' => 'string',
        'email' => 'string',
        'enrollmentTime' => 'string',
        'entLicenseAddress' => 'string',
        'entLicenseArea' => 'string',
        'entLicenseCity' => 'string',
        'entLicenseProvince' => 'string',
        'firmAgentPersonCertExpiryDate' => 'string',
        'firmAgentPersonCertNo' => 'string',
        'firmAgentPersonCertType' => 'string',
        'firmAgentPersonName' => 'string',
        'firmLegalPersonCertExpiryDate' => 'string',
        'firmLegalPersonCertNo' => 'string',
        'firmLegalPersonCertType' => 'string',
        'firmLegalPersonName' => 'string',
        'firmLegalPersonPictures' => '\Alipay\OpenAPISDK\Model\AlipayUserPicture[]',
        'firmPictures' => '\Alipay\OpenAPISDK\Model\AlipayUserPicture[]',
        'firmType' => 'string',
        'gender' => 'string',
        'graduationTime' => 'string',
        'identityCardAddress' => 'string',
        'identityCardArea' => 'string',
        'identityCardCity' => 'string',
        'identityCardProvince' => 'string',
        'instOrCorp' => 'string',
        'isAdult' => 'string',
        'isBalanceFrozen' => 'string',
        'isBlocked' => 'string',
        'isCertified' => 'string',
        'isStudentCertified' => 'string',
        'licenseExpiryDate' => 'string',
        'licenseNo' => 'string',
        'memberGrade' => 'string',
        'mobile' => 'string',
        'nickName' => 'string',
        'openId' => 'string',
        'organizationCode' => 'string',
        'personBirthday' => 'string',
        'personBirthdayWithoutYear' => 'string',
        'personCertExpiryDate' => 'string',
        'personCertIssueDate' => 'string',
        'personPictures' => '\Alipay\OpenAPISDK\Model\AlipayUserPicture[]',
        'phone' => 'string',
        'profession' => 'string',
        'province' => 'string',
        'taobaoId' => 'string',
        'userId' => 'string',
        'userName' => 'string',
        'userNation' => 'string',
        'userStatus' => 'string',
        'userType' => 'string',
        'zip' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'address' => null,
        'age' => null,
        'area' => null,
        'avatar' => null,
        'businessScope' => null,
        'certNo' => null,
        'certType' => null,
        'city' => null,
        'collegeName' => null,
        'countryCode' => null,
        'degree' => null,
        'deliverAddresses' => null,
        'displayName' => null,
        'email' => null,
        'enrollmentTime' => null,
        'entLicenseAddress' => null,
        'entLicenseArea' => null,
        'entLicenseCity' => null,
        'entLicenseProvince' => null,
        'firmAgentPersonCertExpiryDate' => null,
        'firmAgentPersonCertNo' => null,
        'firmAgentPersonCertType' => null,
        'firmAgentPersonName' => null,
        'firmLegalPersonCertExpiryDate' => null,
        'firmLegalPersonCertNo' => null,
        'firmLegalPersonCertType' => null,
        'firmLegalPersonName' => null,
        'firmLegalPersonPictures' => null,
        'firmPictures' => null,
        'firmType' => null,
        'gender' => null,
        'graduationTime' => null,
        'identityCardAddress' => null,
        'identityCardArea' => null,
        'identityCardCity' => null,
        'identityCardProvince' => null,
        'instOrCorp' => null,
        'isAdult' => null,
        'isBalanceFrozen' => null,
        'isBlocked' => null,
        'isCertified' => null,
        'isStudentCertified' => null,
        'licenseExpiryDate' => null,
        'licenseNo' => null,
        'memberGrade' => null,
        'mobile' => null,
        'nickName' => null,
        'openId' => null,
        'organizationCode' => null,
        'personBirthday' => null,
        'personBirthdayWithoutYear' => null,
        'personCertExpiryDate' => null,
        'personCertIssueDate' => null,
        'personPictures' => null,
        'phone' => null,
        'profession' => null,
        'province' => null,
        'taobaoId' => null,
        'userId' => null,
        'userName' => null,
        'userNation' => null,
        'userStatus' => null,
        'userType' => null,
        'zip' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'address' => 'address',
        'age' => 'age',
        'area' => 'area',
        'avatar' => 'avatar',
        'businessScope' => 'business_scope',
        'certNo' => 'cert_no',
        'certType' => 'cert_type',
        'city' => 'city',
        'collegeName' => 'college_name',
        'countryCode' => 'country_code',
        'degree' => 'degree',
        'deliverAddresses' => 'deliver_addresses',
        'displayName' => 'display_name',
        'email' => 'email',
        'enrollmentTime' => 'enrollment_time',
        'entLicenseAddress' => 'ent_license_address',
        'entLicenseArea' => 'ent_license_area',
        'entLicenseCity' => 'ent_license_city',
        'entLicenseProvince' => 'ent_license_province',
        'firmAgentPersonCertExpiryDate' => 'firm_agent_person_cert_expiry_date',
        'firmAgentPersonCertNo' => 'firm_agent_person_cert_no',
        'firmAgentPersonCertType' => 'firm_agent_person_cert_type',
        'firmAgentPersonName' => 'firm_agent_person_name',
        'firmLegalPersonCertExpiryDate' => 'firm_legal_person_cert_expiry_date',
        'firmLegalPersonCertNo' => 'firm_legal_person_cert_no',
        'firmLegalPersonCertType' => 'firm_legal_person_cert_type',
        'firmLegalPersonName' => 'firm_legal_person_name',
        'firmLegalPersonPictures' => 'firm_legal_person_pictures',
        'firmPictures' => 'firm_pictures',
        'firmType' => 'firm_type',
        'gender' => 'gender',
        'graduationTime' => 'graduation_time',
        'identityCardAddress' => 'identity_card_address',
        'identityCardArea' => 'identity_card_area',
        'identityCardCity' => 'identity_card_city',
        'identityCardProvince' => 'identity_card_province',
        'instOrCorp' => 'inst_or_corp',
        'isAdult' => 'is_adult',
        'isBalanceFrozen' => 'is_balance_frozen',
        'isBlocked' => 'is_blocked',
        'isCertified' => 'is_certified',
        'isStudentCertified' => 'is_student_certified',
        'licenseExpiryDate' => 'license_expiry_date',
        'licenseNo' => 'license_no',
        'memberGrade' => 'member_grade',
        'mobile' => 'mobile',
        'nickName' => 'nick_name',
        'openId' => 'open_id',
        'organizationCode' => 'organization_code',
        'personBirthday' => 'person_birthday',
        'personBirthdayWithoutYear' => 'person_birthday_without_year',
        'personCertExpiryDate' => 'person_cert_expiry_date',
        'personCertIssueDate' => 'person_cert_issue_date',
        'personPictures' => 'person_pictures',
        'phone' => 'phone',
        'profession' => 'profession',
        'province' => 'province',
        'taobaoId' => 'taobao_id',
        'userId' => 'user_id',
        'userName' => 'user_name',
        'userNation' => 'user_nation',
        'userStatus' => 'user_status',
        'userType' => 'user_type',
        'zip' => 'zip'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'address' => 'setAddress',
        'age' => 'setAge',
        'area' => 'setArea',
        'avatar' => 'setAvatar',
        'businessScope' => 'setBusinessScope',
        'certNo' => 'setCertNo',
        'certType' => 'setCertType',
        'city' => 'setCity',
        'collegeName' => 'setCollegeName',
        'countryCode' => 'setCountryCode',
        'degree' => 'setDegree',
        'deliverAddresses' => 'setDeliverAddresses',
        'displayName' => 'setDisplayName',
        'email' => 'setEmail',
        'enrollmentTime' => 'setEnrollmentTime',
        'entLicenseAddress' => 'setEntLicenseAddress',
        'entLicenseArea' => 'setEntLicenseArea',
        'entLicenseCity' => 'setEntLicenseCity',
        'entLicenseProvince' => 'setEntLicenseProvince',
        'firmAgentPersonCertExpiryDate' => 'setFirmAgentPersonCertExpiryDate',
        'firmAgentPersonCertNo' => 'setFirmAgentPersonCertNo',
        'firmAgentPersonCertType' => 'setFirmAgentPersonCertType',
        'firmAgentPersonName' => 'setFirmAgentPersonName',
        'firmLegalPersonCertExpiryDate' => 'setFirmLegalPersonCertExpiryDate',
        'firmLegalPersonCertNo' => 'setFirmLegalPersonCertNo',
        'firmLegalPersonCertType' => 'setFirmLegalPersonCertType',
        'firmLegalPersonName' => 'setFirmLegalPersonName',
        'firmLegalPersonPictures' => 'setFirmLegalPersonPictures',
        'firmPictures' => 'setFirmPictures',
        'firmType' => 'setFirmType',
        'gender' => 'setGender',
        'graduationTime' => 'setGraduationTime',
        'identityCardAddress' => 'setIdentityCardAddress',
        'identityCardArea' => 'setIdentityCardArea',
        'identityCardCity' => 'setIdentityCardCity',
        'identityCardProvince' => 'setIdentityCardProvince',
        'instOrCorp' => 'setInstOrCorp',
        'isAdult' => 'setIsAdult',
        'isBalanceFrozen' => 'setIsBalanceFrozen',
        'isBlocked' => 'setIsBlocked',
        'isCertified' => 'setIsCertified',
        'isStudentCertified' => 'setIsStudentCertified',
        'licenseExpiryDate' => 'setLicenseExpiryDate',
        'licenseNo' => 'setLicenseNo',
        'memberGrade' => 'setMemberGrade',
        'mobile' => 'setMobile',
        'nickName' => 'setNickName',
        'openId' => 'setOpenId',
        'organizationCode' => 'setOrganizationCode',
        'personBirthday' => 'setPersonBirthday',
        'personBirthdayWithoutYear' => 'setPersonBirthdayWithoutYear',
        'personCertExpiryDate' => 'setPersonCertExpiryDate',
        'personCertIssueDate' => 'setPersonCertIssueDate',
        'personPictures' => 'setPersonPictures',
        'phone' => 'setPhone',
        'profession' => 'setProfession',
        'province' => 'setProvince',
        'taobaoId' => 'setTaobaoId',
        'userId' => 'setUserId',
        'userName' => 'setUserName',
        'userNation' => 'setUserNation',
        'userStatus' => 'setUserStatus',
        'userType' => 'setUserType',
        'zip' => 'setZip'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'address' => 'getAddress',
        'age' => 'getAge',
        'area' => 'getArea',
        'avatar' => 'getAvatar',
        'businessScope' => 'getBusinessScope',
        'certNo' => 'getCertNo',
        'certType' => 'getCertType',
        'city' => 'getCity',
        'collegeName' => 'getCollegeName',
        'countryCode' => 'getCountryCode',
        'degree' => 'getDegree',
        'deliverAddresses' => 'getDeliverAddresses',
        'displayName' => 'getDisplayName',
        'email' => 'getEmail',
        'enrollmentTime' => 'getEnrollmentTime',
        'entLicenseAddress' => 'getEntLicenseAddress',
        'entLicenseArea' => 'getEntLicenseArea',
        'entLicenseCity' => 'getEntLicenseCity',
        'entLicenseProvince' => 'getEntLicenseProvince',
        'firmAgentPersonCertExpiryDate' => 'getFirmAgentPersonCertExpiryDate',
        'firmAgentPersonCertNo' => 'getFirmAgentPersonCertNo',
        'firmAgentPersonCertType' => 'getFirmAgentPersonCertType',
        'firmAgentPersonName' => 'getFirmAgentPersonName',
        'firmLegalPersonCertExpiryDate' => 'getFirmLegalPersonCertExpiryDate',
        'firmLegalPersonCertNo' => 'getFirmLegalPersonCertNo',
        'firmLegalPersonCertType' => 'getFirmLegalPersonCertType',
        'firmLegalPersonName' => 'getFirmLegalPersonName',
        'firmLegalPersonPictures' => 'getFirmLegalPersonPictures',
        'firmPictures' => 'getFirmPictures',
        'firmType' => 'getFirmType',
        'gender' => 'getGender',
        'graduationTime' => 'getGraduationTime',
        'identityCardAddress' => 'getIdentityCardAddress',
        'identityCardArea' => 'getIdentityCardArea',
        'identityCardCity' => 'getIdentityCardCity',
        'identityCardProvince' => 'getIdentityCardProvince',
        'instOrCorp' => 'getInstOrCorp',
        'isAdult' => 'getIsAdult',
        'isBalanceFrozen' => 'getIsBalanceFrozen',
        'isBlocked' => 'getIsBlocked',
        'isCertified' => 'getIsCertified',
        'isStudentCertified' => 'getIsStudentCertified',
        'licenseExpiryDate' => 'getLicenseExpiryDate',
        'licenseNo' => 'getLicenseNo',
        'memberGrade' => 'getMemberGrade',
        'mobile' => 'getMobile',
        'nickName' => 'getNickName',
        'openId' => 'getOpenId',
        'organizationCode' => 'getOrganizationCode',
        'personBirthday' => 'getPersonBirthday',
        'personBirthdayWithoutYear' => 'getPersonBirthdayWithoutYear',
        'personCertExpiryDate' => 'getPersonCertExpiryDate',
        'personCertIssueDate' => 'getPersonCertIssueDate',
        'personPictures' => 'getPersonPictures',
        'phone' => 'getPhone',
        'profession' => 'getProfession',
        'province' => 'getProvince',
        'taobaoId' => 'getTaobaoId',
        'userId' => 'getUserId',
        'userName' => 'getUserName',
        'userNation' => 'getUserNation',
        'userStatus' => 'getUserStatus',
        'userType' => 'getUserType',
        'zip' => 'getZip'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['address'] = $data['address'] ?? null;
        $this->container['age'] = $data['age'] ?? null;
        $this->container['area'] = $data['area'] ?? null;
        $this->container['avatar'] = $data['avatar'] ?? null;
        $this->container['businessScope'] = $data['businessScope'] ?? null;
        $this->container['certNo'] = $data['certNo'] ?? null;
        $this->container['certType'] = $data['certType'] ?? null;
        $this->container['city'] = $data['city'] ?? null;
        $this->container['collegeName'] = $data['collegeName'] ?? null;
        $this->container['countryCode'] = $data['countryCode'] ?? null;
        $this->container['degree'] = $data['degree'] ?? null;
        $this->container['deliverAddresses'] = $data['deliverAddresses'] ?? null;
        $this->container['displayName'] = $data['displayName'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['enrollmentTime'] = $data['enrollmentTime'] ?? null;
        $this->container['entLicenseAddress'] = $data['entLicenseAddress'] ?? null;
        $this->container['entLicenseArea'] = $data['entLicenseArea'] ?? null;
        $this->container['entLicenseCity'] = $data['entLicenseCity'] ?? null;
        $this->container['entLicenseProvince'] = $data['entLicenseProvince'] ?? null;
        $this->container['firmAgentPersonCertExpiryDate'] = $data['firmAgentPersonCertExpiryDate'] ?? null;
        $this->container['firmAgentPersonCertNo'] = $data['firmAgentPersonCertNo'] ?? null;
        $this->container['firmAgentPersonCertType'] = $data['firmAgentPersonCertType'] ?? null;
        $this->container['firmAgentPersonName'] = $data['firmAgentPersonName'] ?? null;
        $this->container['firmLegalPersonCertExpiryDate'] = $data['firmLegalPersonCertExpiryDate'] ?? null;
        $this->container['firmLegalPersonCertNo'] = $data['firmLegalPersonCertNo'] ?? null;
        $this->container['firmLegalPersonCertType'] = $data['firmLegalPersonCertType'] ?? null;
        $this->container['firmLegalPersonName'] = $data['firmLegalPersonName'] ?? null;
        $this->container['firmLegalPersonPictures'] = $data['firmLegalPersonPictures'] ?? null;
        $this->container['firmPictures'] = $data['firmPictures'] ?? null;
        $this->container['firmType'] = $data['firmType'] ?? null;
        $this->container['gender'] = $data['gender'] ?? null;
        $this->container['graduationTime'] = $data['graduationTime'] ?? null;
        $this->container['identityCardAddress'] = $data['identityCardAddress'] ?? null;
        $this->container['identityCardArea'] = $data['identityCardArea'] ?? null;
        $this->container['identityCardCity'] = $data['identityCardCity'] ?? null;
        $this->container['identityCardProvince'] = $data['identityCardProvince'] ?? null;
        $this->container['instOrCorp'] = $data['instOrCorp'] ?? null;
        $this->container['isAdult'] = $data['isAdult'] ?? null;
        $this->container['isBalanceFrozen'] = $data['isBalanceFrozen'] ?? null;
        $this->container['isBlocked'] = $data['isBlocked'] ?? null;
        $this->container['isCertified'] = $data['isCertified'] ?? null;
        $this->container['isStudentCertified'] = $data['isStudentCertified'] ?? null;
        $this->container['licenseExpiryDate'] = $data['licenseExpiryDate'] ?? null;
        $this->container['licenseNo'] = $data['licenseNo'] ?? null;
        $this->container['memberGrade'] = $data['memberGrade'] ?? null;
        $this->container['mobile'] = $data['mobile'] ?? null;
        $this->container['nickName'] = $data['nickName'] ?? null;
        $this->container['openId'] = $data['openId'] ?? null;
        $this->container['organizationCode'] = $data['organizationCode'] ?? null;
        $this->container['personBirthday'] = $data['personBirthday'] ?? null;
        $this->container['personBirthdayWithoutYear'] = $data['personBirthdayWithoutYear'] ?? null;
        $this->container['personCertExpiryDate'] = $data['personCertExpiryDate'] ?? null;
        $this->container['personCertIssueDate'] = $data['personCertIssueDate'] ?? null;
        $this->container['personPictures'] = $data['personPictures'] ?? null;
        $this->container['phone'] = $data['phone'] ?? null;
        $this->container['profession'] = $data['profession'] ?? null;
        $this->container['province'] = $data['province'] ?? null;
        $this->container['taobaoId'] = $data['taobaoId'] ?? null;
        $this->container['userId'] = $data['userId'] ?? null;
        $this->container['userName'] = $data['userName'] ?? null;
        $this->container['userNation'] = $data['userNation'] ?? null;
        $this->container['userStatus'] = $data['userStatus'] ?? null;
        $this->container['userType'] = $data['userType'] ?? null;
        $this->container['zip'] = $data['zip'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets address
     *
     * @return string|null
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string|null $address 详细地址。
     *
     * @return self
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets age
     *
     * @return string|null
     */
    public function getAge()
    {
        return $this->container['age'];
    }

    /**
     * Sets age
     *
     * @param string|null $age 用户年龄，实名认证为T，且证件类型为身份证，则输出年龄字段，否则不输出
     *
     * @return self
     */
    public function setAge($age)
    {
        $this->container['age'] = $age;

        return $this;
    }

    /**
     * Gets area
     *
     * @return string|null
     */
    public function getArea()
    {
        return $this->container['area'];
    }

    /**
     * Sets area
     *
     * @param string|null $area 区县名称。
     *
     * @return self
     */
    public function setArea($area)
    {
        $this->container['area'] = $area;

        return $this;
    }

    /**
     * Gets avatar
     *
     * @return string|null
     */
    public function getAvatar()
    {
        return $this->container['avatar'];
    }

    /**
     * Sets avatar
     *
     * @param string|null $avatar 用户头像地址。 注意：如果没有数据（用户未设置）时不会返回该信息，请做好容错。
     *
     * @return self
     */
    public function setAvatar($avatar)
    {
        $this->container['avatar'] = $avatar;

        return $this;
    }

    /**
     * Gets businessScope
     *
     * @return string|null
     */
    public function getBusinessScope()
    {
        return $this->container['businessScope'];
    }

    /**
     * Sets businessScope
     *
     * @param string|null $businessScope 经营/业务范围（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setBusinessScope($businessScope)
    {
        $this->container['businessScope'] = $businessScope;

        return $this;
    }

    /**
     * Gets certNo
     *
     * @return string|null
     */
    public function getCertNo()
    {
        return $this->container['certNo'];
    }

    /**
     * Sets certNo
     *
     * @param string|null $certNo 【证件号码】结合证件类型使用.【注意】只is_certified为T的时候才有意义，否则不保证准确性.
     *
     * @return self
     */
    public function setCertNo($certNo)
    {
        $this->container['certNo'] = $certNo;

        return $this;
    }

    /**
     * Gets certType
     *
     * @return string|null
     */
    public function getCertType()
    {
        return $this->container['certType'];
    }

    /**
     * Sets certType
     *
     * @param string|null $certType 【证件类型】0:身份证 1:护照 2:军官证 3:士兵证 4:回乡证 5:临时身份证 6:户口簿 7:警官证 8:台胞证 9:营业执照10:其它证件 11:港澳居民来往内地通行证 12:台湾居民来往大陆通行证 13:台湾居民居住证 14:港澳居民居住证  15:港澳身份证 16:外国人永久居住证【注意】只有is_certified为T的时候才有意义，否则不保证准确性.
     *
     * @return self
     */
    public function setCertType($certType)
    {
        $this->container['certType'] = $certType;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string|null
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string|null $city 市名称。
     *
     * @return self
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets collegeName
     *
     * @return string|null
     */
    public function getCollegeName()
    {
        return $this->container['collegeName'];
    }

    /**
     * Sets collegeName
     *
     * @param string|null $collegeName 学信网返回的学校名称，有可能为空。
     *
     * @return self
     */
    public function setCollegeName($collegeName)
    {
        $this->container['collegeName'] = $collegeName;

        return $this;
    }

    /**
     * Gets countryCode
     *
     * @return string|null
     */
    public function getCountryCode()
    {
        return $this->container['countryCode'];
    }

    /**
     * Sets countryCode
     *
     * @param string|null $countryCode 国家码
     *
     * @return self
     */
    public function setCountryCode($countryCode)
    {
        $this->container['countryCode'] = $countryCode;

        return $this;
    }

    /**
     * Gets degree
     *
     * @return string|null
     */
    public function getDegree()
    {
        return $this->container['degree'];
    }

    /**
     * Sets degree
     *
     * @param string|null $degree 学信网返回的学历/学位信息，数据质量一般，请谨慎使用，取值包括：博士研究生、硕士研究生、高升本、专科、博士、硕士、本科、夜大电大函大普通班、专科(高职)、第二学士学位。
     *
     * @return self
     */
    public function setDegree($degree)
    {
        $this->container['degree'] = $degree;

        return $this;
    }

    /**
     * Gets deliverAddresses
     *
     * @return \Alipay\OpenAPISDK\Model\AlipayUserDeliverAddress[]|null
     */
    public function getDeliverAddresses()
    {
        return $this->container['deliverAddresses'];
    }

    /**
     * Sets deliverAddresses
     *
     * @param \Alipay\OpenAPISDK\Model\AlipayUserDeliverAddress[]|null $deliverAddresses 收货地址列表
     *
     * @return self
     */
    public function setDeliverAddresses($deliverAddresses)
    {
        $this->container['deliverAddresses'] = $deliverAddresses;

        return $this;
    }

    /**
     * Gets displayName
     *
     * @return string|null
     */
    public function getDisplayName()
    {
        return $this->container['displayName'];
    }

    /**
     * Sets displayName
     *
     * @param string|null $displayName 展示名称，用于展示和识别用户。返回的值是支付宝账户的可用外标之一，根据展示名称产品规则可能返回手机号/邮箱/支付宝号其中的一个。同一个账户在不同的时期返回的展示名称可能随规则变化而变化。
     *
     * @return self
     */
    public function setDisplayName($displayName)
    {
        $this->container['displayName'] = $displayName;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email 优先获取email登录名，如果不存在，则返回mobile登录名
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets enrollmentTime
     *
     * @return string|null
     */
    public function getEnrollmentTime()
    {
        return $this->container['enrollmentTime'];
    }

    /**
     * Sets enrollmentTime
     *
     * @param string|null $enrollmentTime 入学时间，yyyy-mm-dd格式
     *
     * @return self
     */
    public function setEnrollmentTime($enrollmentTime)
    {
        $this->container['enrollmentTime'] = $enrollmentTime;

        return $this;
    }

    /**
     * Gets entLicenseAddress
     *
     * @return string|null
     */
    public function getEntLicenseAddress()
    {
        return $this->container['entLicenseAddress'];
    }

    /**
     * Sets entLicenseAddress
     *
     * @param string|null $entLicenseAddress 企业证照地址的详细地址（用户类型是公司用户才有该字段）【注意】只有is_certified为T的时候才有意义，否则不保证准确性.
     *
     * @return self
     */
    public function setEntLicenseAddress($entLicenseAddress)
    {
        $this->container['entLicenseAddress'] = $entLicenseAddress;

        return $this;
    }

    /**
     * Gets entLicenseArea
     *
     * @return string|null
     */
    public function getEntLicenseArea()
    {
        return $this->container['entLicenseArea'];
    }

    /**
     * Sets entLicenseArea
     *
     * @param string|null $entLicenseArea 企业证照地址所在地区或县（用户类型是公司用户才有该字段）【注意】只有is_certified为T的时候才有意义，否则不保证准确性，目前企业营业执照地址不含县(区)，area为空。
     *
     * @return self
     */
    public function setEntLicenseArea($entLicenseArea)
    {
        $this->container['entLicenseArea'] = $entLicenseArea;

        return $this;
    }

    /**
     * Gets entLicenseCity
     *
     * @return string|null
     */
    public function getEntLicenseCity()
    {
        return $this->container['entLicenseCity'];
    }

    /**
     * Sets entLicenseCity
     *
     * @param string|null $entLicenseCity 企业证照地址所在市（用户类型是公司用户才有该字段）【注意】只有is_certified为T的时候才有意义，否则不保证准确性.
     *
     * @return self
     */
    public function setEntLicenseCity($entLicenseCity)
    {
        $this->container['entLicenseCity'] = $entLicenseCity;

        return $this;
    }

    /**
     * Gets entLicenseProvince
     *
     * @return string|null
     */
    public function getEntLicenseProvince()
    {
        return $this->container['entLicenseProvince'];
    }

    /**
     * Sets entLicenseProvince
     *
     * @param string|null $entLicenseProvince 企业证照地址所在省份（用户类型是公司用户才有该字段）【注意】只有is_certified为T的时候才有意义，否则不保证准确性.
     *
     * @return self
     */
    public function setEntLicenseProvince($entLicenseProvince)
    {
        $this->container['entLicenseProvince'] = $entLicenseProvince;

        return $this;
    }

    /**
     * Gets firmAgentPersonCertExpiryDate
     *
     * @return string|null
     */
    public function getFirmAgentPersonCertExpiryDate()
    {
        return $this->container['firmAgentPersonCertExpiryDate'];
    }

    /**
     * Sets firmAgentPersonCertExpiryDate
     *
     * @param string|null $firmAgentPersonCertExpiryDate 企业代理人证件有效期（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmAgentPersonCertExpiryDate($firmAgentPersonCertExpiryDate)
    {
        $this->container['firmAgentPersonCertExpiryDate'] = $firmAgentPersonCertExpiryDate;

        return $this;
    }

    /**
     * Gets firmAgentPersonCertNo
     *
     * @return string|null
     */
    public function getFirmAgentPersonCertNo()
    {
        return $this->container['firmAgentPersonCertNo'];
    }

    /**
     * Sets firmAgentPersonCertNo
     *
     * @param string|null $firmAgentPersonCertNo 企业代理人证件号码（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmAgentPersonCertNo($firmAgentPersonCertNo)
    {
        $this->container['firmAgentPersonCertNo'] = $firmAgentPersonCertNo;

        return $this;
    }

    /**
     * Gets firmAgentPersonCertType
     *
     * @return string|null
     */
    public function getFirmAgentPersonCertType()
    {
        return $this->container['firmAgentPersonCertType'];
    }

    /**
     * Sets firmAgentPersonCertType
     *
     * @param string|null $firmAgentPersonCertType 企业代理人证件类型, 返回值参考cert_type字段（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmAgentPersonCertType($firmAgentPersonCertType)
    {
        $this->container['firmAgentPersonCertType'] = $firmAgentPersonCertType;

        return $this;
    }

    /**
     * Gets firmAgentPersonName
     *
     * @return string|null
     */
    public function getFirmAgentPersonName()
    {
        return $this->container['firmAgentPersonName'];
    }

    /**
     * Sets firmAgentPersonName
     *
     * @param string|null $firmAgentPersonName 企业代理人姓名（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmAgentPersonName($firmAgentPersonName)
    {
        $this->container['firmAgentPersonName'] = $firmAgentPersonName;

        return $this;
    }

    /**
     * Gets firmLegalPersonCertExpiryDate
     *
     * @return string|null
     */
    public function getFirmLegalPersonCertExpiryDate()
    {
        return $this->container['firmLegalPersonCertExpiryDate'];
    }

    /**
     * Sets firmLegalPersonCertExpiryDate
     *
     * @param string|null $firmLegalPersonCertExpiryDate 企业法人证件有效期（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmLegalPersonCertExpiryDate($firmLegalPersonCertExpiryDate)
    {
        $this->container['firmLegalPersonCertExpiryDate'] = $firmLegalPersonCertExpiryDate;

        return $this;
    }

    /**
     * Gets firmLegalPersonCertNo
     *
     * @return string|null
     */
    public function getFirmLegalPersonCertNo()
    {
        return $this->container['firmLegalPersonCertNo'];
    }

    /**
     * Sets firmLegalPersonCertNo
     *
     * @param string|null $firmLegalPersonCertNo 法人证件号码（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmLegalPersonCertNo($firmLegalPersonCertNo)
    {
        $this->container['firmLegalPersonCertNo'] = $firmLegalPersonCertNo;

        return $this;
    }

    /**
     * Gets firmLegalPersonCertType
     *
     * @return string|null
     */
    public function getFirmLegalPersonCertType()
    {
        return $this->container['firmLegalPersonCertType'];
    }

    /**
     * Sets firmLegalPersonCertType
     *
     * @param string|null $firmLegalPersonCertType 企业法人证件类型, 返回值参考cert_type字段（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmLegalPersonCertType($firmLegalPersonCertType)
    {
        $this->container['firmLegalPersonCertType'] = $firmLegalPersonCertType;

        return $this;
    }

    /**
     * Gets firmLegalPersonName
     *
     * @return string|null
     */
    public function getFirmLegalPersonName()
    {
        return $this->container['firmLegalPersonName'];
    }

    /**
     * Sets firmLegalPersonName
     *
     * @param string|null $firmLegalPersonName 企业法人名称（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmLegalPersonName($firmLegalPersonName)
    {
        $this->container['firmLegalPersonName'] = $firmLegalPersonName;

        return $this;
    }

    /**
     * Gets firmLegalPersonPictures
     *
     * @return \Alipay\OpenAPISDK\Model\AlipayUserPicture[]|null
     */
    public function getFirmLegalPersonPictures()
    {
        return $this->container['firmLegalPersonPictures'];
    }

    /**
     * Sets firmLegalPersonPictures
     *
     * @param \Alipay\OpenAPISDK\Model\AlipayUserPicture[]|null $firmLegalPersonPictures 企业法人证件图片（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmLegalPersonPictures($firmLegalPersonPictures)
    {
        $this->container['firmLegalPersonPictures'] = $firmLegalPersonPictures;

        return $this;
    }

    /**
     * Gets firmPictures
     *
     * @return \Alipay\OpenAPISDK\Model\AlipayUserPicture[]|null
     */
    public function getFirmPictures()
    {
        return $this->container['firmPictures'];
    }

    /**
     * Sets firmPictures
     *
     * @param \Alipay\OpenAPISDK\Model\AlipayUserPicture[]|null $firmPictures 企业相关证件图片，包含图片地址（目前需要调用alipay.user.certify.image.fetch转换一下）及类型（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setFirmPictures($firmPictures)
    {
        $this->container['firmPictures'] = $firmPictures;

        return $this;
    }

    /**
     * Gets firmType
     *
     * @return string|null
     */
    public function getFirmType()
    {
        return $this->container['firmType'];
    }

    /**
     * Sets firmType
     *
     * @param string|null $firmType 公司类型，包括（用户类型是公司类型时才有此字段）：  CO(公司)  INST(事业单位),  COMM(社会团体),  NGO(民办非企业组织),  STATEORGAN(党政国家机关)
     *
     * @return self
     */
    public function setFirmType($firmType)
    {
        $this->container['firmType'] = $firmType;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender 性别。枚举值如下： F：女性； M：男性。
     *
     * @return self
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets graduationTime
     *
     * @return string|null
     */
    public function getGraduationTime()
    {
        return $this->container['graduationTime'];
    }

    /**
     * Sets graduationTime
     *
     * @param string|null $graduationTime 预期毕业时间，不保证准确性，yyyy-mm-dd格式。
     *
     * @return self
     */
    public function setGraduationTime($graduationTime)
    {
        $this->container['graduationTime'] = $graduationTime;

        return $this;
    }

    /**
     * Gets identityCardAddress
     *
     * @return string|null
     */
    public function getIdentityCardAddress()
    {
        return $this->container['identityCardAddress'];
    }

    /**
     * Sets identityCardAddress
     *
     * @param string|null $identityCardAddress 身份证地址信息
     *
     * @return self
     */
    public function setIdentityCardAddress($identityCardAddress)
    {
        $this->container['identityCardAddress'] = $identityCardAddress;

        return $this;
    }

    /**
     * Gets identityCardArea
     *
     * @return string|null
     */
    public function getIdentityCardArea()
    {
        return $this->container['identityCardArea'];
    }

    /**
     * Sets identityCardArea
     *
     * @param string|null $identityCardArea 身份证地区信息
     *
     * @return self
     */
    public function setIdentityCardArea($identityCardArea)
    {
        $this->container['identityCardArea'] = $identityCardArea;

        return $this;
    }

    /**
     * Gets identityCardCity
     *
     * @return string|null
     */
    public function getIdentityCardCity()
    {
        return $this->container['identityCardCity'];
    }

    /**
     * Sets identityCardCity
     *
     * @param string|null $identityCardCity 身份证市信息
     *
     * @return self
     */
    public function setIdentityCardCity($identityCardCity)
    {
        $this->container['identityCardCity'] = $identityCardCity;

        return $this;
    }

    /**
     * Gets identityCardProvince
     *
     * @return string|null
     */
    public function getIdentityCardProvince()
    {
        return $this->container['identityCardProvince'];
    }

    /**
     * Sets identityCardProvince
     *
     * @param string|null $identityCardProvince 身份证省信息
     *
     * @return self
     */
    public function setIdentityCardProvince($identityCardProvince)
    {
        $this->container['identityCardProvince'] = $identityCardProvince;

        return $this;
    }

    /**
     * Gets instOrCorp
     *
     * @return string|null
     */
    public function getInstOrCorp()
    {
        return $this->container['instOrCorp'];
    }

    /**
     * Sets instOrCorp
     *
     * @param string|null $instOrCorp 是否是金融机构或特殊单位，\"I\"表示金融机构, \"C\"表示无余额账户的单位账户,  \"V\", 表示虚拟主体(类似机构仅内部户无余额户),  \"N\"表示非金融机构且非无余额账户的单位账户,\"?\"表示匿名用户
     *
     * @return self
     */
    public function setInstOrCorp($instOrCorp)
    {
        $this->container['instOrCorp'] = $instOrCorp;

        return $this;
    }

    /**
     * Gets isAdult
     *
     * @return string|null
     */
    public function getIsAdult()
    {
        return $this->container['isAdult'];
    }

    /**
     * Sets isAdult
     *
     * @param string|null $isAdult T/F, 实名认证为T，且证件类型为身份证，则输出是否成年字段，否则不输出
     *
     * @return self
     */
    public function setIsAdult($isAdult)
    {
        $this->container['isAdult'] = $isAdult;

        return $this;
    }

    /**
     * Gets isBalanceFrozen
     *
     * @return string|null
     */
    public function getIsBalanceFrozen()
    {
        return $this->container['isBalanceFrozen'];
    }

    /**
     * Sets isBalanceFrozen
     *
     * @param string|null $isBalanceFrozen 余额账户是否被冻结。  T--被冻结；F--未冻结
     *
     * @return self
     */
    public function setIsBalanceFrozen($isBalanceFrozen)
    {
        $this->container['isBalanceFrozen'] = $isBalanceFrozen;

        return $this;
    }

    /**
     * Gets isBlocked
     *
     * @return string|null
     */
    public function getIsBlocked()
    {
        return $this->container['isBlocked'];
    }

    /**
     * Sets isBlocked
     *
     * @param string|null $isBlocked 账户是否被冻结，T/F，T冻结，F未冻结
     *
     * @return self
     */
    public function setIsBlocked($isBlocked)
    {
        $this->container['isBlocked'] = $isBlocked;

        return $this;
    }

    /**
     * Gets isCertified
     *
     * @return string|null
     */
    public function getIsCertified()
    {
        return $this->container['isCertified'];
    }

    /**
     * Sets isCertified
     *
     * @param string|null $isCertified 是否通过实名认证。T是通过 F是没有实名认证。
     *
     * @return self
     */
    public function setIsCertified($isCertified)
    {
        $this->container['isCertified'] = $isCertified;

        return $this;
    }

    /**
     * Gets isStudentCertified
     *
     * @return string|null
     */
    public function getIsStudentCertified()
    {
        return $this->container['isStudentCertified'];
    }

    /**
     * Sets isStudentCertified
     *
     * @param string|null $isStudentCertified 是否是学生
     *
     * @return self
     */
    public function setIsStudentCertified($isStudentCertified)
    {
        $this->container['isStudentCertified'] = $isStudentCertified;

        return $this;
    }

    /**
     * Gets licenseExpiryDate
     *
     * @return string|null
     */
    public function getLicenseExpiryDate()
    {
        return $this->container['licenseExpiryDate'];
    }

    /**
     * Sets licenseExpiryDate
     *
     * @param string|null $licenseExpiryDate 营业执照有效期，yyyyMMdd或长期，（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setLicenseExpiryDate($licenseExpiryDate)
    {
        $this->container['licenseExpiryDate'] = $licenseExpiryDate;

        return $this;
    }

    /**
     * Gets licenseNo
     *
     * @return string|null
     */
    public function getLicenseNo()
    {
        return $this->container['licenseNo'];
    }

    /**
     * Sets licenseNo
     *
     * @param string|null $licenseNo 企业执照号码（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setLicenseNo($licenseNo)
    {
        $this->container['licenseNo'] = $licenseNo;

        return $this;
    }

    /**
     * Gets memberGrade
     *
     * @return string|null
     */
    public function getMemberGrade()
    {
        return $this->container['memberGrade'];
    }

    /**
     * Sets memberGrade
     *
     * @param string|null $memberGrade 支付宝会员等级
     *
     * @return self
     */
    public function setMemberGrade($memberGrade)
    {
        $this->container['memberGrade'] = $memberGrade;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string|null
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string|null $mobile 手机号码。
     *
     * @return self
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets nickName
     *
     * @return string|null
     */
    public function getNickName()
    {
        return $this->container['nickName'];
    }

    /**
     * Sets nickName
     *
     * @param string|null $nickName 用户昵称。 注意：如果没有数据（用户未设置）时不会返回该信息，请做好容错。
     *
     * @return self
     */
    public function setNickName($nickName)
    {
        $this->container['nickName'] = $nickName;

        return $this;
    }

    /**
     * Gets openId
     *
     * @return string|null
     */
    public function getOpenId()
    {
        return $this->container['openId'];
    }

    /**
     * Sets openId
     *
     * @param string|null $openId 支付宝用户的openId。
     *
     * @return self
     */
    public function setOpenId($openId)
    {
        $this->container['openId'] = $openId;

        return $this;
    }

    /**
     * Gets organizationCode
     *
     * @return string|null
     */
    public function getOrganizationCode()
    {
        return $this->container['organizationCode'];
    }

    /**
     * Sets organizationCode
     *
     * @param string|null $organizationCode 组织机构代码（用户类型是公司类型时才有此字段）。
     *
     * @return self
     */
    public function setOrganizationCode($organizationCode)
    {
        $this->container['organizationCode'] = $organizationCode;

        return $this;
    }

    /**
     * Gets personBirthday
     *
     * @return string|null
     */
    public function getPersonBirthday()
    {
        return $this->container['personBirthday'];
    }

    /**
     * Sets personBirthday
     *
     * @param string|null $personBirthday 个人用户生日。
     *
     * @return self
     */
    public function setPersonBirthday($personBirthday)
    {
        $this->container['personBirthday'] = $personBirthday;

        return $this;
    }

    /**
     * Gets personBirthdayWithoutYear
     *
     * @return string|null
     */
    public function getPersonBirthdayWithoutYear()
    {
        return $this->container['personBirthdayWithoutYear'];
    }

    /**
     * Sets personBirthdayWithoutYear
     *
     * @param string|null $personBirthdayWithoutYear 生日。不包含具体年份，格式MMdd
     *
     * @return self
     */
    public function setPersonBirthdayWithoutYear($personBirthdayWithoutYear)
    {
        $this->container['personBirthdayWithoutYear'] = $personBirthdayWithoutYear;

        return $this;
    }

    /**
     * Gets personCertExpiryDate
     *
     * @return string|null
     */
    public function getPersonCertExpiryDate()
    {
        return $this->container['personCertExpiryDate'];
    }

    /**
     * Sets personCertExpiryDate
     *
     * @param string|null $personCertExpiryDate 证件有效期（用户类型是个人的时候才有此字段）。
     *
     * @return self
     */
    public function setPersonCertExpiryDate($personCertExpiryDate)
    {
        $this->container['personCertExpiryDate'] = $personCertExpiryDate;

        return $this;
    }

    /**
     * Gets personCertIssueDate
     *
     * @return string|null
     */
    public function getPersonCertIssueDate()
    {
        return $this->container['personCertIssueDate'];
    }

    /**
     * Sets personCertIssueDate
     *
     * @param string|null $personCertIssueDate 证件起始日期（用户类型是个人的时候才可能有此字段，不保证准确，同时有可能为空）。
     *
     * @return self
     */
    public function setPersonCertIssueDate($personCertIssueDate)
    {
        $this->container['personCertIssueDate'] = $personCertIssueDate;

        return $this;
    }

    /**
     * Gets personPictures
     *
     * @return \Alipay\OpenAPISDK\Model\AlipayUserPicture[]|null
     */
    public function getPersonPictures()
    {
        return $this->container['personPictures'];
    }

    /**
     * Sets personPictures
     *
     * @param \Alipay\OpenAPISDK\Model\AlipayUserPicture[]|null $personPictures 个人证件图片（用户类型是个人的时候才有此字段）。
     *
     * @return self
     */
    public function setPersonPictures($personPictures)
    {
        $this->container['personPictures'] = $personPictures;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string|null
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string|null $phone 电话号码。
     *
     * @return self
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets profession
     *
     * @return string|null
     */
    public function getProfession()
    {
        return $this->container['profession'];
    }

    /**
     * Sets profession
     *
     * @param string|null $profession 职业
     *
     * @return self
     */
    public function setProfession($profession)
    {
        $this->container['profession'] = $profession;

        return $this;
    }

    /**
     * Gets province
     *
     * @return string|null
     */
    public function getProvince()
    {
        return $this->container['province'];
    }

    /**
     * Sets province
     *
     * @param string|null $province 省份名称。
     *
     * @return self
     */
    public function setProvince($province)
    {
        $this->container['province'] = $province;

        return $this;
    }

    /**
     * Gets taobaoId
     *
     * @return string|null
     */
    public function getTaobaoId()
    {
        return $this->container['taobaoId'];
    }

    /**
     * Sets taobaoId
     *
     * @param string|null $taobaoId 淘宝id
     *
     * @return self
     */
    public function setTaobaoId($taobaoId)
    {
        $this->container['taobaoId'] = $taobaoId;

        return $this;
    }

    /**
     * Gets userId
     *
     * @return string|null
     */
    public function getUserId()
    {
        return $this->container['userId'];
    }

    /**
     * Sets userId
     *
     * @param string|null $userId 支付宝用户的userId。
     *
     * @return self
     */
    public function setUserId($userId)
    {
        $this->container['userId'] = $userId;

        return $this;
    }

    /**
     * Gets userName
     *
     * @return string|null
     */
    public function getUserName()
    {
        return $this->container['userName'];
    }

    /**
     * Sets userName
     *
     * @param string|null $userName 若用户是个人用户，则是用户的真实姓名；若是企业用户，则是企业名称。【注意】只有is_certified为T的时候才有意义，否则不保证准确性.
     *
     * @return self
     */
    public function setUserName($userName)
    {
        $this->container['userName'] = $userName;

        return $this;
    }

    /**
     * Gets userNation
     *
     * @return string|null
     */
    public function getUserNation()
    {
        return $this->container['userNation'];
    }

    /**
     * Sets userNation
     *
     * @param string|null $userNation 身份证民族信息
     *
     * @return self
     */
    public function setUserNation($userNation)
    {
        $this->container['userNation'] = $userNation;

        return $this;
    }

    /**
     * Gets userStatus
     *
     * @return string|null
     */
    public function getUserStatus()
    {
        return $this->container['userStatus'];
    }

    /**
     * Sets userStatus
     *
     * @param string|null $userStatus 用户状态（Q/T/B/W）。 Q代表快速注册用户 T代表正常用户 B代表被冻结账户 W代表已注册，未激活的账户
     *
     * @return self
     */
    public function setUserStatus($userStatus)
    {
        $this->container['userStatus'] = $userStatus;

        return $this;
    }

    /**
     * Gets userType
     *
     * @return string|null
     */
    public function getUserType()
    {
        return $this->container['userType'];
    }

    /**
     * Sets userType
     *
     * @param string|null $userType 用户类型（1/2）  1代表公司账户2代表个人账户
     *
     * @return self
     */
    public function setUserType($userType)
    {
        $this->container['userType'] = $userType;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return string|null
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param string|null $zip 邮政编码。
     *
     * @return self
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


