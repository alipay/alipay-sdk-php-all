<?php
/**
 * AlipayTradeRefundModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayTradeRefundModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayTradeRefundModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayTradeRefundModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'goodsDetail' => '\Alipay\OpenAPISDK\Model\GoodsDetail[]',
        'operatorId' => 'string',
        'orgPid' => 'string',
        'outRequestNo' => 'string',
        'outTradeNo' => 'string',
        'queryOptions' => 'string[]',
        'refundAdvanceAccount' => 'string',
        'refundAdvanceAccountType' => 'string',
        'refundAmount' => 'string',
        'refundCurrency' => 'string',
        'refundGoodsDetail' => '\Alipay\OpenAPISDK\Model\RefundGoodsDetail[]',
        'refundReason' => 'string',
        'refundRoyaltyParameters' => '\Alipay\OpenAPISDK\Model\OpenApiRoyaltyDetailInfoPojo[]',
        'refundTransOut' => 'string',
        'refundTransOutType' => 'string',
        'relatedSettleConfirmNo' => 'string',
        'storeId' => 'string',
        'terminalId' => 'string',
        'tradeNo' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'goodsDetail' => null,
        'operatorId' => null,
        'orgPid' => null,
        'outRequestNo' => null,
        'outTradeNo' => null,
        'queryOptions' => null,
        'refundAdvanceAccount' => null,
        'refundAdvanceAccountType' => null,
        'refundAmount' => null,
        'refundCurrency' => null,
        'refundGoodsDetail' => null,
        'refundReason' => null,
        'refundRoyaltyParameters' => null,
        'refundTransOut' => null,
        'refundTransOutType' => null,
        'relatedSettleConfirmNo' => null,
        'storeId' => null,
        'terminalId' => null,
        'tradeNo' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'goodsDetail' => 'goods_detail',
        'operatorId' => 'operator_id',
        'orgPid' => 'org_pid',
        'outRequestNo' => 'out_request_no',
        'outTradeNo' => 'out_trade_no',
        'queryOptions' => 'query_options',
        'refundAdvanceAccount' => 'refund_advance_account',
        'refundAdvanceAccountType' => 'refund_advance_account_type',
        'refundAmount' => 'refund_amount',
        'refundCurrency' => 'refund_currency',
        'refundGoodsDetail' => 'refund_goods_detail',
        'refundReason' => 'refund_reason',
        'refundRoyaltyParameters' => 'refund_royalty_parameters',
        'refundTransOut' => 'refund_trans_out',
        'refundTransOutType' => 'refund_trans_out_type',
        'relatedSettleConfirmNo' => 'related_settle_confirm_no',
        'storeId' => 'store_id',
        'terminalId' => 'terminal_id',
        'tradeNo' => 'trade_no'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'goodsDetail' => 'setGoodsDetail',
        'operatorId' => 'setOperatorId',
        'orgPid' => 'setOrgPid',
        'outRequestNo' => 'setOutRequestNo',
        'outTradeNo' => 'setOutTradeNo',
        'queryOptions' => 'setQueryOptions',
        'refundAdvanceAccount' => 'setRefundAdvanceAccount',
        'refundAdvanceAccountType' => 'setRefundAdvanceAccountType',
        'refundAmount' => 'setRefundAmount',
        'refundCurrency' => 'setRefundCurrency',
        'refundGoodsDetail' => 'setRefundGoodsDetail',
        'refundReason' => 'setRefundReason',
        'refundRoyaltyParameters' => 'setRefundRoyaltyParameters',
        'refundTransOut' => 'setRefundTransOut',
        'refundTransOutType' => 'setRefundTransOutType',
        'relatedSettleConfirmNo' => 'setRelatedSettleConfirmNo',
        'storeId' => 'setStoreId',
        'terminalId' => 'setTerminalId',
        'tradeNo' => 'setTradeNo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'goodsDetail' => 'getGoodsDetail',
        'operatorId' => 'getOperatorId',
        'orgPid' => 'getOrgPid',
        'outRequestNo' => 'getOutRequestNo',
        'outTradeNo' => 'getOutTradeNo',
        'queryOptions' => 'getQueryOptions',
        'refundAdvanceAccount' => 'getRefundAdvanceAccount',
        'refundAdvanceAccountType' => 'getRefundAdvanceAccountType',
        'refundAmount' => 'getRefundAmount',
        'refundCurrency' => 'getRefundCurrency',
        'refundGoodsDetail' => 'getRefundGoodsDetail',
        'refundReason' => 'getRefundReason',
        'refundRoyaltyParameters' => 'getRefundRoyaltyParameters',
        'refundTransOut' => 'getRefundTransOut',
        'refundTransOutType' => 'getRefundTransOutType',
        'relatedSettleConfirmNo' => 'getRelatedSettleConfirmNo',
        'storeId' => 'getStoreId',
        'terminalId' => 'getTerminalId',
        'tradeNo' => 'getTradeNo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['goodsDetail'] = $data['goodsDetail'] ?? null;
        $this->container['operatorId'] = $data['operatorId'] ?? null;
        $this->container['orgPid'] = $data['orgPid'] ?? null;
        $this->container['outRequestNo'] = $data['outRequestNo'] ?? null;
        $this->container['outTradeNo'] = $data['outTradeNo'] ?? null;
        $this->container['queryOptions'] = $data['queryOptions'] ?? null;
        $this->container['refundAdvanceAccount'] = $data['refundAdvanceAccount'] ?? null;
        $this->container['refundAdvanceAccountType'] = $data['refundAdvanceAccountType'] ?? null;
        $this->container['refundAmount'] = $data['refundAmount'] ?? null;
        $this->container['refundCurrency'] = $data['refundCurrency'] ?? null;
        $this->container['refundGoodsDetail'] = $data['refundGoodsDetail'] ?? null;
        $this->container['refundReason'] = $data['refundReason'] ?? null;
        $this->container['refundRoyaltyParameters'] = $data['refundRoyaltyParameters'] ?? null;
        $this->container['refundTransOut'] = $data['refundTransOut'] ?? null;
        $this->container['refundTransOutType'] = $data['refundTransOutType'] ?? null;
        $this->container['relatedSettleConfirmNo'] = $data['relatedSettleConfirmNo'] ?? null;
        $this->container['storeId'] = $data['storeId'] ?? null;
        $this->container['terminalId'] = $data['terminalId'] ?? null;
        $this->container['tradeNo'] = $data['tradeNo'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets goodsDetail
     *
     * @return \Alipay\OpenAPISDK\Model\GoodsDetail[]|null
     */
    public function getGoodsDetail()
    {
        return $this->container['goodsDetail'];
    }

    /**
     * Sets goodsDetail
     *
     * @param \Alipay\OpenAPISDK\Model\GoodsDetail[]|null $goodsDetail 退款包含的商品列表信息，Json格式。
     *
     * @return self
     */
    public function setGoodsDetail($goodsDetail)
    {
        $this->container['goodsDetail'] = $goodsDetail;

        return $this;
    }

    /**
     * Gets operatorId
     *
     * @return string|null
     */
    public function getOperatorId()
    {
        return $this->container['operatorId'];
    }

    /**
     * Sets operatorId
     *
     * @param string|null $operatorId 商户的操作员编号
     *
     * @return self
     */
    public function setOperatorId($operatorId)
    {
        $this->container['operatorId'] = $operatorId;

        return $this;
    }

    /**
     * Gets orgPid
     *
     * @return string|null
     */
    public function getOrgPid()
    {
        return $this->container['orgPid'];
    }

    /**
     * Sets orgPid
     *
     * @param string|null $orgPid 银行间联模式下有用，其它场景请不要使用；  双联通过该参数指定需要退款的交易所属收单机构的pid;
     *
     * @return self
     */
    public function setOrgPid($orgPid)
    {
        $this->container['orgPid'] = $orgPid;

        return $this;
    }

    /**
     * Gets outRequestNo
     *
     * @return string|null
     */
    public function getOutRequestNo()
    {
        return $this->container['outRequestNo'];
    }

    /**
     * Sets outRequestNo
     *
     * @param string|null $outRequestNo 退款请求号。 标识一次退款请求，需要保证在交易号下唯一，如需部分退款，则此参数必传。 注：针对同一次退款请求，如果调用接口失败或异常了，重试时需要保证退款请求号不能变更，防止该笔交易重复退款。支付宝会保证同样的退款请求号多次请求只会退一次。
     *
     * @return self
     */
    public function setOutRequestNo($outRequestNo)
    {
        $this->container['outRequestNo'] = $outRequestNo;

        return $this;
    }

    /**
     * Gets outTradeNo
     *
     * @return string|null
     */
    public function getOutTradeNo()
    {
        return $this->container['outTradeNo'];
    }

    /**
     * Sets outTradeNo
     *
     * @param string|null $outTradeNo 商户订单号。 订单支付时传入的商户订单号，商家自定义且保证商家系统中唯一。与支付宝交易号 trade_no 不能同时为空。
     *
     * @return self
     */
    public function setOutTradeNo($outTradeNo)
    {
        $this->container['outTradeNo'] = $outTradeNo;

        return $this;
    }

    /**
     * Gets queryOptions
     *
     * @return string[]|null
     */
    public function getQueryOptions()
    {
        return $this->container['queryOptions'];
    }

    /**
     * Sets queryOptions
     *
     * @param string[]|null $queryOptions 查询选项。 商户通过上送该参数来定制同步需要额外返回的信息字段，数组格式。
     *
     * @return self
     */
    public function setQueryOptions($queryOptions)
    {
        $this->container['queryOptions'] = $queryOptions;

        return $this;
    }

    /**
     * Gets refundAdvanceAccount
     *
     * @return string|null
     */
    public function getRefundAdvanceAccount()
    {
        return $this->container['refundAdvanceAccount'];
    }

    /**
     * Sets refundAdvanceAccount
     *
     * @param string|null $refundAdvanceAccount 指定垫资退款账号主体，可能是用户id或登录名
     *
     * @return self
     */
    public function setRefundAdvanceAccount($refundAdvanceAccount)
    {
        $this->container['refundAdvanceAccount'] = $refundAdvanceAccount;

        return $this;
    }

    /**
     * Gets refundAdvanceAccountType
     *
     * @return string|null
     */
    public function getRefundAdvanceAccountType()
    {
        return $this->container['refundAdvanceAccountType'];
    }

    /**
     * Sets refundAdvanceAccountType
     *
     * @param string|null $refundAdvanceAccountType 指定垫资退款账号的类型，取值范围：default，userId，loginName
     *
     * @return self
     */
    public function setRefundAdvanceAccountType($refundAdvanceAccountType)
    {
        $this->container['refundAdvanceAccountType'] = $refundAdvanceAccountType;

        return $this;
    }

    /**
     * Gets refundAmount
     *
     * @return string|null
     */
    public function getRefundAmount()
    {
        return $this->container['refundAmount'];
    }

    /**
     * Sets refundAmount
     *
     * @param string|null $refundAmount 退款金额。 需要退款的金额，该金额不能大于订单金额，单位为元，支持两位小数。 注：如果正向交易使用了营销，该退款金额包含营销金额，支付宝会按业务规则分配营销和买家自有资金分别退多少，默认优先退买家的自有资金。如交易总金额100元，用户支付时使用了80元自有资金和20元无资金流的营销券，商家实际收款80元。如果首次请求退款60元，则60元全部从商家收款资金扣除退回给用户自有资产；如果再请求退款40元，则从商家收款资金扣除20元退回用户资产以及把20元的营销券退回给用户（券是否可再使用取决于券的规则配置）。
     *
     * @return self
     */
    public function setRefundAmount($refundAmount)
    {
        $this->container['refundAmount'] = $refundAmount;

        return $this;
    }

    /**
     * Gets refundCurrency
     *
     * @return string|null
     */
    public function getRefundCurrency()
    {
        return $this->container['refundCurrency'];
    }

    /**
     * Sets refundCurrency
     *
     * @param string|null $refundCurrency 订单退款币种信息。支持英镑：GBP、港币：HKD、美元：USD、新加坡元：SGD、日元：JPY、加拿大元：CAD、澳元：AUD、欧元：EUR、新西兰元：NZD、韩元：KRW、泰铢：THB、瑞士法郎：CHF、瑞典克朗：SEK、丹麦克朗：DKK、挪威克朗：NOK、马来西亚林吉特：MYR、印尼卢比：IDR、菲律宾比索：PHP、毛里求斯卢比：MUR、以色列新谢克尔：ILS、斯里兰卡卢比：LKR、俄罗斯卢布：RUB、阿联酋迪拉姆：AED、捷克克朗：CZK、南非兰特：ZAR、人民币：CNY
     *
     * @return self
     */
    public function setRefundCurrency($refundCurrency)
    {
        $this->container['refundCurrency'] = $refundCurrency;

        return $this;
    }

    /**
     * Gets refundGoodsDetail
     *
     * @return \Alipay\OpenAPISDK\Model\RefundGoodsDetail[]|null
     */
    public function getRefundGoodsDetail()
    {
        return $this->container['refundGoodsDetail'];
    }

    /**
     * Sets refundGoodsDetail
     *
     * @param \Alipay\OpenAPISDK\Model\RefundGoodsDetail[]|null $refundGoodsDetail 退款包含的商品列表信息
     *
     * @return self
     */
    public function setRefundGoodsDetail($refundGoodsDetail)
    {
        $this->container['refundGoodsDetail'] = $refundGoodsDetail;

        return $this;
    }

    /**
     * Gets refundReason
     *
     * @return string|null
     */
    public function getRefundReason()
    {
        return $this->container['refundReason'];
    }

    /**
     * Sets refundReason
     *
     * @param string|null $refundReason 退款原因说明。 商家自定义，将在会在商户和用户的pc退款账单详情中展示
     *
     * @return self
     */
    public function setRefundReason($refundReason)
    {
        $this->container['refundReason'] = $refundReason;

        return $this;
    }

    /**
     * Gets refundRoyaltyParameters
     *
     * @return \Alipay\OpenAPISDK\Model\OpenApiRoyaltyDetailInfoPojo[]|null
     */
    public function getRefundRoyaltyParameters()
    {
        return $this->container['refundRoyaltyParameters'];
    }

    /**
     * Sets refundRoyaltyParameters
     *
     * @param \Alipay\OpenAPISDK\Model\OpenApiRoyaltyDetailInfoPojo[]|null $refundRoyaltyParameters 退分账明细信息。  注： 1.当面付且非直付通模式无需传入退分账明细，系统自动按退款金额与订单金额的比率，从收款方和分账收入方退款，不支持指定退款金额与退款方。  2.直付通模式，电脑网站支付，手机 APP 支付，手机网站支付产品，须在退款请求中明确是否退分账，从哪个分账收入方退，退多少分账金额；如不明确，默认从收款方退款，收款方余额不足退款失败。不支持系统按比率退款。
     *
     * @return self
     */
    public function setRefundRoyaltyParameters($refundRoyaltyParameters)
    {
        $this->container['refundRoyaltyParameters'] = $refundRoyaltyParameters;

        return $this;
    }

    /**
     * Gets refundTransOut
     *
     * @return string|null
     */
    public function getRefundTransOut()
    {
        return $this->container['refundTransOut'];
    }

    /**
     * Sets refundTransOut
     *
     * @param string|null $refundTransOut 指定退款账号，对应指定账号退款合约中的约定账号  与refund_trans_out_type绑定使用 1、refund_trans_out_type=userId时，传入对应的支付宝2088账号 2、refund_trans_out_type=loginName时，传入对应的支付宝账号登录名
     *
     * @return self
     */
    public function setRefundTransOut($refundTransOut)
    {
        $this->container['refundTransOut'] = $refundTransOut;

        return $this;
    }

    /**
     * Gets refundTransOutType
     *
     * @return string|null
     */
    public function getRefundTransOutType()
    {
        return $this->container['refundTransOutType'];
    }

    /**
     * Sets refundTransOutType
     *
     * @param string|null $refundTransOutType 指定退款账号类型 userId：支付宝账号id loginName：支付宝账号登录名
     *
     * @return self
     */
    public function setRefundTransOutType($refundTransOutType)
    {
        $this->container['refundTransOutType'] = $refundTransOutType;

        return $this;
    }

    /**
     * Gets relatedSettleConfirmNo
     *
     * @return string|null
     */
    public function getRelatedSettleConfirmNo()
    {
        return $this->container['relatedSettleConfirmNo'];
    }

    /**
     * Sets relatedSettleConfirmNo
     *
     * @param string|null $relatedSettleConfirmNo 针对账期交易，在确认结算后退款的话，需要指定确认结算时的结算单号。
     *
     * @return self
     */
    public function setRelatedSettleConfirmNo($relatedSettleConfirmNo)
    {
        $this->container['relatedSettleConfirmNo'] = $relatedSettleConfirmNo;

        return $this;
    }

    /**
     * Gets storeId
     *
     * @return string|null
     */
    public function getStoreId()
    {
        return $this->container['storeId'];
    }

    /**
     * Sets storeId
     *
     * @param string|null $storeId 商户门店编号，由商家自定义。需保证当前商户下唯一。
     *
     * @return self
     */
    public function setStoreId($storeId)
    {
        $this->container['storeId'] = $storeId;

        return $this;
    }

    /**
     * Gets terminalId
     *
     * @return string|null
     */
    public function getTerminalId()
    {
        return $this->container['terminalId'];
    }

    /**
     * Sets terminalId
     *
     * @param string|null $terminalId 商户的终端编号
     *
     * @return self
     */
    public function setTerminalId($terminalId)
    {
        $this->container['terminalId'] = $terminalId;

        return $this;
    }

    /**
     * Gets tradeNo
     *
     * @return string|null
     */
    public function getTradeNo()
    {
        return $this->container['tradeNo'];
    }

    /**
     * Sets tradeNo
     *
     * @param string|null $tradeNo 支付宝交易号。 和商户订单号 out_trade_no 不能同时为空，两者同时存在时，优先取值trade_no
     *
     * @return self
     */
    public function setTradeNo($tradeNo)
    {
        $this->container['tradeNo'] = $tradeNo;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


