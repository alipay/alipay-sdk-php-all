<?php
/**
 * BailDetailResult
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * BailDetailResult Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class BailDetailResult implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'BailDetailResult';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'amount' => 'string',
        'bailType' => 'string',
        'balance' => 'string',
        'bizDesc' => 'string',
        'bizOrigNo' => 'string',
        'memo' => 'string',
        'transDt' => 'string',
        'transLogId' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'amount' => null,
        'bailType' => null,
        'balance' => null,
        'bizDesc' => null,
        'bizOrigNo' => null,
        'memo' => null,
        'transDt' => null,
        'transLogId' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'amount' => 'amount',
        'bailType' => 'bail_type',
        'balance' => 'balance',
        'bizDesc' => 'biz_desc',
        'bizOrigNo' => 'biz_orig_no',
        'memo' => 'memo',
        'transDt' => 'trans_dt',
        'transLogId' => 'trans_log_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'amount' => 'setAmount',
        'bailType' => 'setBailType',
        'balance' => 'setBalance',
        'bizDesc' => 'setBizDesc',
        'bizOrigNo' => 'setBizOrigNo',
        'memo' => 'setMemo',
        'transDt' => 'setTransDt',
        'transLogId' => 'setTransLogId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'amount' => 'getAmount',
        'bailType' => 'getBailType',
        'balance' => 'getBalance',
        'bizDesc' => 'getBizDesc',
        'bizOrigNo' => 'getBizOrigNo',
        'memo' => 'getMemo',
        'transDt' => 'getTransDt',
        'transLogId' => 'getTransLogId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['bailType'] = $data['bailType'] ?? null;
        $this->container['balance'] = $data['balance'] ?? null;
        $this->container['bizDesc'] = $data['bizDesc'] ?? null;
        $this->container['bizOrigNo'] = $data['bizOrigNo'] ?? null;
        $this->container['memo'] = $data['memo'] ?? null;
        $this->container['transDt'] = $data['transDt'] ?? null;
        $this->container['transLogId'] = $data['transLogId'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets amount
     *
     * @return string|null
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param string|null $amount 保证金收支金额
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets bailType
     *
     * @return string|null
     */
    public function getBailType()
    {
        return $this->container['bailType'];
    }

    /**
     * Sets bailType
     *
     * @param string|null $bailType 保证金类型描述，仅供参考
     *
     * @return self
     */
    public function setBailType($bailType)
    {
        $this->container['bailType'] = $bailType;

        return $this;
    }

    /**
     * Gets balance
     *
     * @return string|null
     */
    public function getBalance()
    {
        return $this->container['balance'];
    }

    /**
     * Sets balance
     *
     * @param string|null $balance 本次操作后的保证金余额。字段数据展示为\"--\"，表明数据暂未更新，请稍等1分钟后重试。
     *
     * @return self
     */
    public function setBalance($balance)
    {
        $this->container['balance'] = $balance;

        return $this;
    }

    /**
     * Gets bizDesc
     *
     * @return string|null
     */
    public function getBizDesc()
    {
        return $this->container['bizDesc'];
    }

    /**
     * Sets bizDesc
     *
     * @param string|null $bizDesc 业务描述，资金收支对应的详细业务场景信息
     *
     * @return self
     */
    public function setBizDesc($bizDesc)
    {
        $this->container['bizDesc'] = $bizDesc;

        return $this;
    }

    /**
     * Gets bizOrigNo
     *
     * @return string|null
     */
    public function getBizOrigNo()
    {
        return $this->container['bizOrigNo'];
    }

    /**
     * Sets bizOrigNo
     *
     * @param string|null $bizOrigNo 业务基础订单号，资金收支对应的原始业务订单唯一识别编号
     *
     * @return self
     */
    public function setBizOrigNo($bizOrigNo)
    {
        $this->container['bizOrigNo'] = $bizOrigNo;

        return $this;
    }

    /**
     * Gets memo
     *
     * @return string|null
     */
    public function getMemo()
    {
        return $this->container['memo'];
    }

    /**
     * Sets memo
     *
     * @param string|null $memo 保证金说明
     *
     * @return self
     */
    public function setMemo($memo)
    {
        $this->container['memo'] = $memo;

        return $this;
    }

    /**
     * Gets transDt
     *
     * @return string|null
     */
    public function getTransDt()
    {
        return $this->container['transDt'];
    }

    /**
     * Sets transDt
     *
     * @param string|null $transDt 业务发生时间
     *
     * @return self
     */
    public function setTransDt($transDt)
    {
        $this->container['transDt'] = $transDt;

        return $this;
    }

    /**
     * Gets transLogId
     *
     * @return string|null
     */
    public function getTransLogId()
    {
        return $this->container['transLogId'];
    }

    /**
     * Sets transLogId
     *
     * @param string|null $transLogId 保证金业务流水号
     *
     * @return self
     */
    public function setTransLogId($transLogId)
    {
        $this->container['transLogId'] = $transLogId;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


