<?php
/**
 * AlipayTradeCustomsDeclareModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayTradeCustomsDeclareModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayTradeCustomsDeclareModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayTradeCustomsDeclareModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'amount' => 'string',
        'buyerInfo' => '\Alipay\OpenAPISDK\Model\CustomsDeclareBuyerInfo',
        'customsPlace' => 'string',
        'declareMode' => 'int',
        'depositTradeNo' => 'string',
        'isSplit' => 'string',
        'merchantCustomsCode' => 'string',
        'merchantCustomsName' => 'string',
        'merchantId' => 'string',
        'outRequestNo' => 'string',
        'outTradeNo' => 'string',
        'subOutBizNo' => 'string',
        'tradeNo' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'amount' => null,
        'buyerInfo' => null,
        'customsPlace' => null,
        'declareMode' => null,
        'depositTradeNo' => null,
        'isSplit' => null,
        'merchantCustomsCode' => null,
        'merchantCustomsName' => null,
        'merchantId' => null,
        'outRequestNo' => null,
        'outTradeNo' => null,
        'subOutBizNo' => null,
        'tradeNo' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'amount' => 'amount',
        'buyerInfo' => 'buyer_info',
        'customsPlace' => 'customs_place',
        'declareMode' => 'declare_mode',
        'depositTradeNo' => 'deposit_trade_no',
        'isSplit' => 'is_split',
        'merchantCustomsCode' => 'merchant_customs_code',
        'merchantCustomsName' => 'merchant_customs_name',
        'merchantId' => 'merchant_id',
        'outRequestNo' => 'out_request_no',
        'outTradeNo' => 'out_trade_no',
        'subOutBizNo' => 'sub_out_biz_no',
        'tradeNo' => 'trade_no'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'amount' => 'setAmount',
        'buyerInfo' => 'setBuyerInfo',
        'customsPlace' => 'setCustomsPlace',
        'declareMode' => 'setDeclareMode',
        'depositTradeNo' => 'setDepositTradeNo',
        'isSplit' => 'setIsSplit',
        'merchantCustomsCode' => 'setMerchantCustomsCode',
        'merchantCustomsName' => 'setMerchantCustomsName',
        'merchantId' => 'setMerchantId',
        'outRequestNo' => 'setOutRequestNo',
        'outTradeNo' => 'setOutTradeNo',
        'subOutBizNo' => 'setSubOutBizNo',
        'tradeNo' => 'setTradeNo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'amount' => 'getAmount',
        'buyerInfo' => 'getBuyerInfo',
        'customsPlace' => 'getCustomsPlace',
        'declareMode' => 'getDeclareMode',
        'depositTradeNo' => 'getDepositTradeNo',
        'isSplit' => 'getIsSplit',
        'merchantCustomsCode' => 'getMerchantCustomsCode',
        'merchantCustomsName' => 'getMerchantCustomsName',
        'merchantId' => 'getMerchantId',
        'outRequestNo' => 'getOutRequestNo',
        'outTradeNo' => 'getOutTradeNo',
        'subOutBizNo' => 'getSubOutBizNo',
        'tradeNo' => 'getTradeNo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['amount'] = $data['amount'] ?? null;
        $this->container['buyerInfo'] = $data['buyerInfo'] ?? null;
        $this->container['customsPlace'] = $data['customsPlace'] ?? null;
        $this->container['declareMode'] = $data['declareMode'] ?? null;
        $this->container['depositTradeNo'] = $data['depositTradeNo'] ?? null;
        $this->container['isSplit'] = $data['isSplit'] ?? null;
        $this->container['merchantCustomsCode'] = $data['merchantCustomsCode'] ?? null;
        $this->container['merchantCustomsName'] = $data['merchantCustomsName'] ?? null;
        $this->container['merchantId'] = $data['merchantId'] ?? null;
        $this->container['outRequestNo'] = $data['outRequestNo'] ?? null;
        $this->container['outTradeNo'] = $data['outTradeNo'] ?? null;
        $this->container['subOutBizNo'] = $data['subOutBizNo'] ?? null;
        $this->container['tradeNo'] = $data['tradeNo'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets amount
     *
     * @return string|null
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param string|null $amount 报关金额，单位为人民币“元”，精确到小数点后2位。
     *
     * @return self
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets buyerInfo
     *
     * @return \Alipay\OpenAPISDK\Model\CustomsDeclareBuyerInfo|null
     */
    public function getBuyerInfo()
    {
        return $this->container['buyerInfo'];
    }

    /**
     * Sets buyerInfo
     *
     * @param \Alipay\OpenAPISDK\Model\CustomsDeclareBuyerInfo|null $buyerInfo buyerInfo
     *
     * @return self
     */
    public function setBuyerInfo($buyerInfo)
    {
        $this->container['buyerInfo'] = $buyerInfo;

        return $this;
    }

    /**
     * Gets customsPlace
     *
     * @return string|null
     */
    public function getCustomsPlace()
    {
        return $this->container['customsPlace'];
    }

    /**
     * Sets customsPlace
     *
     * @param string|null $customsPlace 海关编号（大小写皆可）。参见“ <a href=\"https://opendocs.alipay.com/pre-open/01x3kh#%E6%B5%B7%E5%85%B3%E7%BC%96%E5%8F%B7\">海关编号</a>”。
     *
     * @return self
     */
    public function setCustomsPlace($customsPlace)
    {
        $this->container['customsPlace'] = $customsPlace;

        return $this;
    }

    /**
     * Gets declareMode
     *
     * @return int|null
     */
    public function getDeclareMode()
    {
        return $this->container['declareMode'];
    }

    /**
     * Sets declareMode
     *
     * @param int|null $declareMode 报关模式，默认可空，1表示需要强校验买家和支付人的身份信息。
     *
     * @return self
     */
    public function setDeclareMode($declareMode)
    {
        $this->container['declareMode'] = $declareMode;

        return $this;
    }

    /**
     * Gets depositTradeNo
     *
     * @return string|null
     */
    public function getDepositTradeNo()
    {
        return $this->container['depositTradeNo'];
    }

    /**
     * Sets depositTradeNo
     *
     * @param string|null $depositTradeNo 定金在支付宝系统中的交易流水号，最长64位。当该参数不为空时，代表为”定金+尾款“报关场景。
     *
     * @return self
     */
    public function setDepositTradeNo($depositTradeNo)
    {
        $this->container['depositTradeNo'] = $depositTradeNo;

        return $this;
    }

    /**
     * Gets isSplit
     *
     * @return string|null
     */
    public function getIsSplit()
    {
        return $this->container['isSplit'];
    }

    /**
     * Sets isSplit
     *
     * @param string|null $isSplit 商户控制本单是否拆单的报关参数。  仅当该参数传值为T或者t时，才会触发拆单。
     *
     * @return self
     */
    public function setIsSplit($isSplit)
    {
        $this->container['isSplit'] = $isSplit;

        return $this;
    }

    /**
     * Gets merchantCustomsCode
     *
     * @return string|null
     */
    public function getMerchantCustomsCode()
    {
        return $this->container['merchantCustomsCode'];
    }

    /**
     * Sets merchantCustomsCode
     *
     * @param string|null $merchantCustomsCode 商户在海关备案的编号。
     *
     * @return self
     */
    public function setMerchantCustomsCode($merchantCustomsCode)
    {
        $this->container['merchantCustomsCode'] = $merchantCustomsCode;

        return $this;
    }

    /**
     * Gets merchantCustomsName
     *
     * @return string|null
     */
    public function getMerchantCustomsName()
    {
        return $this->container['merchantCustomsName'];
    }

    /**
     * Sets merchantCustomsName
     *
     * @param string|null $merchantCustomsName 商户海关备案名称。
     *
     * @return self
     */
    public function setMerchantCustomsName($merchantCustomsName)
    {
        $this->container['merchantCustomsName'] = $merchantCustomsName;

        return $this;
    }

    /**
     * Gets merchantId
     *
     * @return string|null
     */
    public function getMerchantId()
    {
        return $this->container['merchantId'];
    }

    /**
     * Sets merchantId
     *
     * @param string|null $merchantId 国际站商户标识
     *
     * @return self
     */
    public function setMerchantId($merchantId)
    {
        $this->container['merchantId'] = $merchantId;

        return $this;
    }

    /**
     * Gets outRequestNo
     *
     * @return string|null
     */
    public function getOutRequestNo()
    {
        return $this->container['outRequestNo'];
    }

    /**
     * Sets outRequestNo
     *
     * @param string|null $outRequestNo 报关流水号。商户生成的用于唯一标识一次报关操作的业务编号。 建议生成规则：yyyymmdd型8位日期拼接4位序列号。每个报关请求号仅允许传入：数字、英文字母、下划线”_”、短横线”－” 。长度6-64位前后不能有空格
     *
     * @return self
     */
    public function setOutRequestNo($outRequestNo)
    {
        $this->container['outRequestNo'] = $outRequestNo;

        return $this;
    }

    /**
     * Gets outTradeNo
     *
     * @return string|null
     */
    public function getOutTradeNo()
    {
        return $this->container['outTradeNo'];
    }

    /**
     * Sets outTradeNo
     *
     * @param string|null $outTradeNo 国际站外部订单号
     *
     * @return self
     */
    public function setOutTradeNo($outTradeNo)
    {
        $this->container['outTradeNo'] = $outTradeNo;

        return $this;
    }

    /**
     * Gets subOutBizNo
     *
     * @return string|null
     */
    public function getSubOutBizNo()
    {
        return $this->container['subOutBizNo'];
    }

    /**
     * Sets subOutBizNo
     *
     * @param string|null $subOutBizNo 拆单报关的商户子订单号。 用于区别拆单时不同子单。拆单时必须传入，否则会报INVALID_PARAMETER错误码。
     *
     * @return self
     */
    public function setSubOutBizNo($subOutBizNo)
    {
        $this->container['subOutBizNo'] = $subOutBizNo;

        return $this;
    }

    /**
     * Gets tradeNo
     *
     * @return string|null
     */
    public function getTradeNo()
    {
        return $this->container['tradeNo'];
    }

    /**
     * Sets tradeNo
     *
     * @param string|null $tradeNo 支付宝交易号。该交易在支付宝系统中的交易流水号，最长64位。
     *
     * @return self
     */
    public function setTradeNo($tradeNo)
    {
        $this->container['tradeNo'] = $tradeNo;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


