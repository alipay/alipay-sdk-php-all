<?php
/**
 * AlipayEcoMycarParkingExitinfoSyncModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayEcoMycarParkingExitinfoSyncModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayEcoMycarParkingExitinfoSyncModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayEcoMycarParkingExitinfoSyncModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'actualAmount' => 'string',
        'carColor' => 'string',
        'carNumber' => 'string',
        'discountAmount' => 'string',
        'exitId' => 'string',
        'isEncryptCarNumber' => 'bool',
        'isvUrl' => 'string',
        'orderAmount' => 'string',
        'outSerialNo' => 'string',
        'outTime' => 'string',
        'parkingId' => 'string',
        'serialNo' => 'string',
        'spaceNumber' => 'string',
        'storeId' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'actualAmount' => null,
        'carColor' => null,
        'carNumber' => null,
        'discountAmount' => null,
        'exitId' => null,
        'isEncryptCarNumber' => null,
        'isvUrl' => null,
        'orderAmount' => null,
        'outSerialNo' => null,
        'outTime' => null,
        'parkingId' => null,
        'serialNo' => null,
        'spaceNumber' => null,
        'storeId' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'actualAmount' => 'actual_amount',
        'carColor' => 'car_color',
        'carNumber' => 'car_number',
        'discountAmount' => 'discount_amount',
        'exitId' => 'exit_id',
        'isEncryptCarNumber' => 'is_encrypt_car_number',
        'isvUrl' => 'isv_url',
        'orderAmount' => 'order_amount',
        'outSerialNo' => 'out_serial_no',
        'outTime' => 'out_time',
        'parkingId' => 'parking_id',
        'serialNo' => 'serial_no',
        'spaceNumber' => 'space_number',
        'storeId' => 'store_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'actualAmount' => 'setActualAmount',
        'carColor' => 'setCarColor',
        'carNumber' => 'setCarNumber',
        'discountAmount' => 'setDiscountAmount',
        'exitId' => 'setExitId',
        'isEncryptCarNumber' => 'setIsEncryptCarNumber',
        'isvUrl' => 'setIsvUrl',
        'orderAmount' => 'setOrderAmount',
        'outSerialNo' => 'setOutSerialNo',
        'outTime' => 'setOutTime',
        'parkingId' => 'setParkingId',
        'serialNo' => 'setSerialNo',
        'spaceNumber' => 'setSpaceNumber',
        'storeId' => 'setStoreId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'actualAmount' => 'getActualAmount',
        'carColor' => 'getCarColor',
        'carNumber' => 'getCarNumber',
        'discountAmount' => 'getDiscountAmount',
        'exitId' => 'getExitId',
        'isEncryptCarNumber' => 'getIsEncryptCarNumber',
        'isvUrl' => 'getIsvUrl',
        'orderAmount' => 'getOrderAmount',
        'outSerialNo' => 'getOutSerialNo',
        'outTime' => 'getOutTime',
        'parkingId' => 'getParkingId',
        'serialNo' => 'getSerialNo',
        'spaceNumber' => 'getSpaceNumber',
        'storeId' => 'getStoreId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['actualAmount'] = $data['actualAmount'] ?? null;
        $this->container['carColor'] = $data['carColor'] ?? null;
        $this->container['carNumber'] = $data['carNumber'] ?? null;
        $this->container['discountAmount'] = $data['discountAmount'] ?? null;
        $this->container['exitId'] = $data['exitId'] ?? null;
        $this->container['isEncryptCarNumber'] = $data['isEncryptCarNumber'] ?? null;
        $this->container['isvUrl'] = $data['isvUrl'] ?? null;
        $this->container['orderAmount'] = $data['orderAmount'] ?? null;
        $this->container['outSerialNo'] = $data['outSerialNo'] ?? null;
        $this->container['outTime'] = $data['outTime'] ?? null;
        $this->container['parkingId'] = $data['parkingId'] ?? null;
        $this->container['serialNo'] = $data['serialNo'] ?? null;
        $this->container['spaceNumber'] = $data['spaceNumber'] ?? null;
        $this->container['storeId'] = $data['storeId'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets actualAmount
     *
     * @return string|null
     */
    public function getActualAmount()
    {
        return $this->container['actualAmount'];
    }

    /**
     * Sets actualAmount
     *
     * @param string|null $actualAmount 实际金额
     *
     * @return self
     */
    public function setActualAmount($actualAmount)
    {
        $this->container['actualAmount'] = $actualAmount;

        return $this;
    }

    /**
     * Gets carColor
     *
     * @return string|null
     */
    public function getCarColor()
    {
        return $this->container['carColor'];
    }

    /**
     * Sets carColor
     *
     * @param string|null $carColor 车牌颜色，枚举支持： *BLUE：蓝。 *GREEN：绿。 *YELLOW：黄。 *WHITE：白。 *BLACK：黑。 *LIMEGREEN：黄绿色。
     *
     * @return self
     */
    public function setCarColor($carColor)
    {
        $this->container['carColor'] = $carColor;

        return $this;
    }

    /**
     * Gets carNumber
     *
     * @return string|null
     */
    public function getCarNumber()
    {
        return $this->container['carNumber'];
    }

    /**
     * Sets carNumber
     *
     * @param string|null $carNumber 车牌号
     *
     * @return self
     */
    public function setCarNumber($carNumber)
    {
        $this->container['carNumber'] = $carNumber;

        return $this;
    }

    /**
     * Gets discountAmount
     *
     * @return string|null
     */
    public function getDiscountAmount()
    {
        return $this->container['discountAmount'];
    }

    /**
     * Sets discountAmount
     *
     * @param string|null $discountAmount 折扣金额
     *
     * @return self
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->container['discountAmount'] = $discountAmount;

        return $this;
    }

    /**
     * Gets exitId
     *
     * @return string|null
     */
    public function getExitId()
    {
        return $this->container['exitId'];
    }

    /**
     * Sets exitId
     *
     * @param string|null $exitId 用于识别车辆出口，多出入口车场适用
     *
     * @return self
     */
    public function setExitId($exitId)
    {
        $this->container['exitId'] = $exitId;

        return $this;
    }

    /**
     * Gets isEncryptCarNumber
     *
     * @return bool|null
     */
    public function getIsEncryptCarNumber()
    {
        return $this->container['isEncryptCarNumber'];
    }

    /**
     * Sets isEncryptCarNumber
     *
     * @param bool|null $isEncryptCarNumber 是否加密，默认为false
     *
     * @return self
     */
    public function setIsEncryptCarNumber($isEncryptCarNumber)
    {
        $this->container['isEncryptCarNumber'] = $isEncryptCarNumber;

        return $this;
    }

    /**
     * Gets isvUrl
     *
     * @return string|null
     */
    public function getIsvUrl()
    {
        return $this->container['isvUrl'];
    }

    /**
     * Sets isvUrl
     *
     * @param string|null $isvUrl 智能助理当前的跳转链接
     *
     * @return self
     */
    public function setIsvUrl($isvUrl)
    {
        $this->container['isvUrl'] = $isvUrl;

        return $this;
    }

    /**
     * Gets orderAmount
     *
     * @return string|null
     */
    public function getOrderAmount()
    {
        return $this->container['orderAmount'];
    }

    /**
     * Sets orderAmount
     *
     * @param string|null $orderAmount 订单总金额
     *
     * @return self
     */
    public function setOrderAmount($orderAmount)
    {
        $this->container['orderAmount'] = $orderAmount;

        return $this;
    }

    /**
     * Gets outSerialNo
     *
     * @return string|null
     */
    public function getOutSerialNo()
    {
        return $this->container['outSerialNo'];
    }

    /**
     * Sets outSerialNo
     *
     * @param string|null $outSerialNo 外部停车流水号(用于串通进场与出场信息)
     *
     * @return self
     */
    public function setOutSerialNo($outSerialNo)
    {
        $this->container['outSerialNo'] = $outSerialNo;

        return $this;
    }

    /**
     * Gets outTime
     *
     * @return string|null
     */
    public function getOutTime()
    {
        return $this->container['outTime'];
    }

    /**
     * Sets outTime
     *
     * @param string|null $outTime 车辆离场时间，格式\"YYYY-MM-DD HH:mm:ss\"，24小时制
     *
     * @return self
     */
    public function setOutTime($outTime)
    {
        $this->container['outTime'] = $outTime;

        return $this;
    }

    /**
     * Gets parkingId
     *
     * @return string|null
     */
    public function getParkingId()
    {
        return $this->container['parkingId'];
    }

    /**
     * Sets parkingId
     *
     * @param string|null $parkingId 支付宝停车平台ID，由支付宝定义的该停车场标识，同一个ISV或商户范围内唯一。通过 <a href=\"https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.parkinglotinfo.create\">alipay.eco.mycar.parking.parkinglotinfo.create</a>(录入停车场信息)接口获取。
     *
     * @return self
     */
    public function setParkingId($parkingId)
    {
        $this->container['parkingId'] = $parkingId;

        return $this;
    }

    /**
     * Gets serialNo
     *
     * @return string|null
     */
    public function getSerialNo()
    {
        return $this->container['serialNo'];
    }

    /**
     * Sets serialNo
     *
     * @param string|null $serialNo 支付宝业务流水号，用于记录车辆从驶入到驶出的全流程。通过 <a href=\"https://opendocs.alipay.com/apis/api_19/alipay.eco.mycar.parking.enterinfo.sync\">alipay.eco.mycar.parking.enterinfo.sync</a>(车辆驶入接口)接口获取。
     *
     * @return self
     */
    public function setSerialNo($serialNo)
    {
        $this->container['serialNo'] = $serialNo;

        return $this;
    }

    /**
     * Gets spaceNumber
     *
     * @return string|null
     */
    public function getSpaceNumber()
    {
        return $this->container['spaceNumber'];
    }

    /**
     * Sets spaceNumber
     *
     * @param string|null $spaceNumber 用于标识车辆停放车位编号，路侧适用
     *
     * @return self
     */
    public function setSpaceNumber($spaceNumber)
    {
        $this->container['spaceNumber'] = $spaceNumber;

        return $this;
    }

    /**
     * Gets storeId
     *
     * @return string|null
     */
    public function getStoreId()
    {
        return $this->container['storeId'];
    }

    /**
     * Sets storeId
     *
     * @param string|null $storeId 与parking_id对应的外部停车场编号，在门店中维护
     *
     * @return self
     */
    public function setStoreId($storeId)
    {
        $this->container['storeId'] = $storeId;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


