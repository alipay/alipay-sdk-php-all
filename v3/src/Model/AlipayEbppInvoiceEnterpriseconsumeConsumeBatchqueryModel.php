<?php
/**
 * AlipayEbppInvoiceEnterpriseconsumeConsumeBatchqueryModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayEbppInvoiceEnterpriseconsumeConsumeBatchqueryModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayEbppInvoiceEnterpriseconsumeConsumeBatchqueryModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayEbppInvoiceEnterpriseconsumeConsumeBatchqueryModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'accountId' => 'string',
        'agreementNo' => 'string',
        'consumptionEnd' => 'string',
        'consumptionStart' => 'string',
        'employeeList' => 'string[]',
        'employeeOpenIds' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'accountId' => null,
        'agreementNo' => null,
        'consumptionEnd' => null,
        'consumptionStart' => null,
        'employeeList' => null,
        'employeeOpenIds' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountId' => 'account_id',
        'agreementNo' => 'agreement_no',
        'consumptionEnd' => 'consumption_end',
        'consumptionStart' => 'consumption_start',
        'employeeList' => 'employee_list',
        'employeeOpenIds' => 'employee_open_ids'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountId' => 'setAccountId',
        'agreementNo' => 'setAgreementNo',
        'consumptionEnd' => 'setConsumptionEnd',
        'consumptionStart' => 'setConsumptionStart',
        'employeeList' => 'setEmployeeList',
        'employeeOpenIds' => 'setEmployeeOpenIds'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountId' => 'getAccountId',
        'agreementNo' => 'getAgreementNo',
        'consumptionEnd' => 'getConsumptionEnd',
        'consumptionStart' => 'getConsumptionStart',
        'employeeList' => 'getEmployeeList',
        'employeeOpenIds' => 'getEmployeeOpenIds'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountId'] = $data['accountId'] ?? null;
        $this->container['agreementNo'] = $data['agreementNo'] ?? null;
        $this->container['consumptionEnd'] = $data['consumptionEnd'] ?? null;
        $this->container['consumptionStart'] = $data['consumptionStart'] ?? null;
        $this->container['employeeList'] = $data['employeeList'] ?? null;
        $this->container['employeeOpenIds'] = $data['employeeOpenIds'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountId
     *
     * @return string|null
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param string|null $accountId 企业ID
     *
     * @return self
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets agreementNo
     *
     * @return string|null
     */
    public function getAgreementNo()
    {
        return $this->container['agreementNo'];
    }

    /**
     * Sets agreementNo
     *
     * @param string|null $agreementNo 授权签约协议号
     *
     * @return self
     */
    public function setAgreementNo($agreementNo)
    {
        $this->container['agreementNo'] = $agreementNo;

        return $this;
    }

    /**
     * Gets consumptionEnd
     *
     * @return string|null
     */
    public function getConsumptionEnd()
    {
        return $this->container['consumptionEnd'];
    }

    /**
     * Sets consumptionEnd
     *
     * @param string|null $consumptionEnd 交易结束时间，格式：yyyy-MM-dd HH:mm:ss
     *
     * @return self
     */
    public function setConsumptionEnd($consumptionEnd)
    {
        $this->container['consumptionEnd'] = $consumptionEnd;

        return $this;
    }

    /**
     * Gets consumptionStart
     *
     * @return string|null
     */
    public function getConsumptionStart()
    {
        return $this->container['consumptionStart'];
    }

    /**
     * Sets consumptionStart
     *
     * @param string|null $consumptionStart 交易开始时间，格式：yyyy-MM-dd HH:mm:ss
     *
     * @return self
     */
    public function setConsumptionStart($consumptionStart)
    {
        $this->container['consumptionStart'] = $consumptionStart;

        return $this;
    }

    /**
     * Gets employeeList
     *
     * @return string[]|null
     */
    public function getEmployeeList()
    {
        return $this->container['employeeList'];
    }

    /**
     * Sets employeeList
     *
     * @param string[]|null $employeeList 员工支付宝UID列表，单次传入最大员工数量为10
     *
     * @return self
     */
    public function setEmployeeList($employeeList)
    {
        $this->container['employeeList'] = $employeeList;

        return $this;
    }

    /**
     * Gets employeeOpenIds
     *
     * @return string[]|null
     */
    public function getEmployeeOpenIds()
    {
        return $this->container['employeeOpenIds'];
    }

    /**
     * Sets employeeOpenIds
     *
     * @param string[]|null $employeeOpenIds 员工支付宝UID列表，单次传入最大员工数量为10
     *
     * @return self
     */
    public function setEmployeeOpenIds($employeeOpenIds)
    {
        $this->container['employeeOpenIds'] = $employeeOpenIds;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


