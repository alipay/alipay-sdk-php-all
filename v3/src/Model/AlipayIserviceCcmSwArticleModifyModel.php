<?php
/**
 * AlipayIserviceCcmSwArticleModifyModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayIserviceCcmSwArticleModifyModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayIserviceCcmSwArticleModifyModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayIserviceCcmSwArticleModifyModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'attachments' => '\Alipay\OpenAPISDK\Model\ArticleAttachmentInfo[]',
        'categoryId' => 'int',
        'ccsInstanceId' => 'string',
        'content' => 'string',
        'extendTitles' => 'string[]',
        'id' => 'int',
        'keywords' => 'string[]',
        'publishEnd' => 'string',
        'publishStart' => 'string',
        'relatedArticles' => '\Alipay\OpenAPISDK\Model\BaseArticleInfo[]',
        'sceneCodes' => 'string[]',
        'title' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'attachments' => null,
        'categoryId' => null,
        'ccsInstanceId' => null,
        'content' => null,
        'extendTitles' => null,
        'id' => null,
        'keywords' => null,
        'publishEnd' => null,
        'publishStart' => null,
        'relatedArticles' => null,
        'sceneCodes' => null,
        'title' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'attachments' => 'attachments',
        'categoryId' => 'category_id',
        'ccsInstanceId' => 'ccs_instance_id',
        'content' => 'content',
        'extendTitles' => 'extend_titles',
        'id' => 'id',
        'keywords' => 'keywords',
        'publishEnd' => 'publish_end',
        'publishStart' => 'publish_start',
        'relatedArticles' => 'related_articles',
        'sceneCodes' => 'scene_codes',
        'title' => 'title'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'attachments' => 'setAttachments',
        'categoryId' => 'setCategoryId',
        'ccsInstanceId' => 'setCcsInstanceId',
        'content' => 'setContent',
        'extendTitles' => 'setExtendTitles',
        'id' => 'setId',
        'keywords' => 'setKeywords',
        'publishEnd' => 'setPublishEnd',
        'publishStart' => 'setPublishStart',
        'relatedArticles' => 'setRelatedArticles',
        'sceneCodes' => 'setSceneCodes',
        'title' => 'setTitle'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'attachments' => 'getAttachments',
        'categoryId' => 'getCategoryId',
        'ccsInstanceId' => 'getCcsInstanceId',
        'content' => 'getContent',
        'extendTitles' => 'getExtendTitles',
        'id' => 'getId',
        'keywords' => 'getKeywords',
        'publishEnd' => 'getPublishEnd',
        'publishStart' => 'getPublishStart',
        'relatedArticles' => 'getRelatedArticles',
        'sceneCodes' => 'getSceneCodes',
        'title' => 'getTitle'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['attachments'] = $data['attachments'] ?? null;
        $this->container['categoryId'] = $data['categoryId'] ?? null;
        $this->container['ccsInstanceId'] = $data['ccsInstanceId'] ?? null;
        $this->container['content'] = $data['content'] ?? null;
        $this->container['extendTitles'] = $data['extendTitles'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['keywords'] = $data['keywords'] ?? null;
        $this->container['publishEnd'] = $data['publishEnd'] ?? null;
        $this->container['publishStart'] = $data['publishStart'] ?? null;
        $this->container['relatedArticles'] = $data['relatedArticles'] ?? null;
        $this->container['sceneCodes'] = $data['sceneCodes'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets attachments
     *
     * @return \Alipay\OpenAPISDK\Model\ArticleAttachmentInfo[]|null
     */
    public function getAttachments()
    {
        return $this->container['attachments'];
    }

    /**
     * Sets attachments
     *
     * @param \Alipay\OpenAPISDK\Model\ArticleAttachmentInfo[]|null $attachments 附件列表
     *
     * @return self
     */
    public function setAttachments($attachments)
    {
        $this->container['attachments'] = $attachments;

        return $this;
    }

    /**
     * Gets categoryId
     *
     * @return int|null
     */
    public function getCategoryId()
    {
        return $this->container['categoryId'];
    }

    /**
     * Sets categoryId
     *
     * @param int|null $categoryId 所属类目ID，如果search_all_category为true则不用填
     *
     * @return self
     */
    public function setCategoryId($categoryId)
    {
        $this->container['categoryId'] = $categoryId;

        return $this;
    }

    /**
     * Gets ccsInstanceId
     *
     * @return string|null
     */
    public function getCcsInstanceId()
    {
        return $this->container['ccsInstanceId'];
    }

    /**
     * Sets ccsInstanceId
     *
     * @param string|null $ccsInstanceId 子部门ID，不传为默认部门
     *
     * @return self
     */
    public function setCcsInstanceId($ccsInstanceId)
    {
        $this->container['ccsInstanceId'] = $ccsInstanceId;

        return $this;
    }

    /**
     * Gets content
     *
     * @return string|null
     */
    public function getContent()
    {
        return $this->container['content'];
    }

    /**
     * Sets content
     *
     * @param string|null $content 内容
     *
     * @return self
     */
    public function setContent($content)
    {
        $this->container['content'] = $content;

        return $this;
    }

    /**
     * Gets extendTitles
     *
     * @return string[]|null
     */
    public function getExtendTitles()
    {
        return $this->container['extendTitles'];
    }

    /**
     * Sets extendTitles
     *
     * @param string[]|null $extendTitles 扩展标题
     *
     * @return self
     */
    public function setExtendTitles($extendTitles)
    {
        $this->container['extendTitles'] = $extendTitles;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id 文章ID
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets keywords
     *
     * @return string[]|null
     */
    public function getKeywords()
    {
        return $this->container['keywords'];
    }

    /**
     * Sets keywords
     *
     * @param string[]|null $keywords 标签
     *
     * @return self
     */
    public function setKeywords($keywords)
    {
        $this->container['keywords'] = $keywords;

        return $this;
    }

    /**
     * Gets publishEnd
     *
     * @return string|null
     */
    public function getPublishEnd()
    {
        return $this->container['publishEnd'];
    }

    /**
     * Sets publishEnd
     *
     * @param string|null $publishEnd 有效期结束时间
     *
     * @return self
     */
    public function setPublishEnd($publishEnd)
    {
        $this->container['publishEnd'] = $publishEnd;

        return $this;
    }

    /**
     * Gets publishStart
     *
     * @return string|null
     */
    public function getPublishStart()
    {
        return $this->container['publishStart'];
    }

    /**
     * Sets publishStart
     *
     * @param string|null $publishStart 有效期开始时间
     *
     * @return self
     */
    public function setPublishStart($publishStart)
    {
        $this->container['publishStart'] = $publishStart;

        return $this;
    }

    /**
     * Gets relatedArticles
     *
     * @return \Alipay\OpenAPISDK\Model\BaseArticleInfo[]|null
     */
    public function getRelatedArticles()
    {
        return $this->container['relatedArticles'];
    }

    /**
     * Sets relatedArticles
     *
     * @param \Alipay\OpenAPISDK\Model\BaseArticleInfo[]|null $relatedArticles 关联知识点列表
     *
     * @return self
     */
    public function setRelatedArticles($relatedArticles)
    {
        $this->container['relatedArticles'] = $relatedArticles;

        return $this;
    }

    /**
     * Gets sceneCodes
     *
     * @return string[]|null
     */
    public function getSceneCodes()
    {
        return $this->container['sceneCodes'];
    }

    /**
     * Sets sceneCodes
     *
     * @param string[]|null $sceneCodes 场景ID。1（内部知识库）；2（机器人）;3（帮助中心）；4（无线帮助中心）
     *
     * @return self
     */
    public function setSceneCodes($sceneCodes)
    {
        $this->container['sceneCodes'] = $sceneCodes;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title 标题
     *
     * @return self
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


