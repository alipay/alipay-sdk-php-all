<?php
/**
 * AlipayTradePayResponseModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayTradePayResponseModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayTradePayResponseModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayTradePayResponseModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'advanceAmount' => 'string',
        'asyncPayApplyStatus' => 'string',
        'asyncPaymentMode' => 'string',
        'authTradePayMode' => 'string',
        'bkagentRespInfo' => '\Alipay\OpenAPISDK\Model\BkAgentRespInfo',
        'businessParams' => 'string',
        'buyerLogonId' => 'string',
        'buyerOpenId' => 'string',
        'buyerPayAmount' => 'string',
        'buyerUserId' => 'string',
        'buyerUserName' => 'string',
        'buyerUserType' => 'string',
        'canTurnToAppPay' => 'string',
        'cardBalance' => 'string',
        'chargeAmount' => 'string',
        'chargeFlags' => 'string',
        'chargeInfoList' => '\Alipay\OpenAPISDK\Model\ChargeInfo',
        'creditBizOrderId' => 'string',
        'creditPayMode' => 'string',
        'discountAmount' => 'string',
        'discountGoodsDetail' => 'string',
        'enterprisePayInfo' => '\Alipay\OpenAPISDK\Model\EnterprisePayInfo',
        'fundBillList' => '\Alipay\OpenAPISDK\Model\TradeFundBill[]',
        'gmtPayment' => 'string',
        'hybAmount' => 'string',
        'invoiceAmount' => 'string',
        'mdiscountAmount' => 'string',
        'openId' => 'string',
        'outTradeNo' => 'string',
        'payAmount' => 'string',
        'payCurrency' => 'string',
        'pointAmount' => 'string',
        'preAuthPayAmount' => 'string',
        'receiptAmount' => 'string',
        'receiptCurrencyType' => 'string',
        'settleAmount' => 'string',
        'settleCurrency' => 'string',
        'settleTransRate' => 'string',
        'settlementId' => 'string',
        'storeName' => 'string',
        'tapPayInfo' => '\Alipay\OpenAPISDK\Model\TapPayInfo',
        'totalAmount' => 'string',
        'tradeNo' => 'string',
        'transCurrency' => 'string',
        'transPayRate' => 'string',
        'voucherDetailList' => '\Alipay\OpenAPISDK\Model\VoucherDetail[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'advanceAmount' => null,
        'asyncPayApplyStatus' => null,
        'asyncPaymentMode' => null,
        'authTradePayMode' => null,
        'bkagentRespInfo' => null,
        'businessParams' => null,
        'buyerLogonId' => null,
        'buyerOpenId' => null,
        'buyerPayAmount' => null,
        'buyerUserId' => null,
        'buyerUserName' => null,
        'buyerUserType' => null,
        'canTurnToAppPay' => null,
        'cardBalance' => null,
        'chargeAmount' => null,
        'chargeFlags' => null,
        'chargeInfoList' => null,
        'creditBizOrderId' => null,
        'creditPayMode' => null,
        'discountAmount' => null,
        'discountGoodsDetail' => null,
        'enterprisePayInfo' => null,
        'fundBillList' => null,
        'gmtPayment' => null,
        'hybAmount' => null,
        'invoiceAmount' => null,
        'mdiscountAmount' => null,
        'openId' => null,
        'outTradeNo' => null,
        'payAmount' => null,
        'payCurrency' => null,
        'pointAmount' => null,
        'preAuthPayAmount' => null,
        'receiptAmount' => null,
        'receiptCurrencyType' => null,
        'settleAmount' => null,
        'settleCurrency' => null,
        'settleTransRate' => null,
        'settlementId' => null,
        'storeName' => null,
        'tapPayInfo' => null,
        'totalAmount' => null,
        'tradeNo' => null,
        'transCurrency' => null,
        'transPayRate' => null,
        'voucherDetailList' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'advanceAmount' => 'advance_amount',
        'asyncPayApplyStatus' => 'async_pay_apply_status',
        'asyncPaymentMode' => 'async_payment_mode',
        'authTradePayMode' => 'auth_trade_pay_mode',
        'bkagentRespInfo' => 'bkagent_resp_info',
        'businessParams' => 'business_params',
        'buyerLogonId' => 'buyer_logon_id',
        'buyerOpenId' => 'buyer_open_id',
        'buyerPayAmount' => 'buyer_pay_amount',
        'buyerUserId' => 'buyer_user_id',
        'buyerUserName' => 'buyer_user_name',
        'buyerUserType' => 'buyer_user_type',
        'canTurnToAppPay' => 'can_turn_to_app_pay',
        'cardBalance' => 'card_balance',
        'chargeAmount' => 'charge_amount',
        'chargeFlags' => 'charge_flags',
        'chargeInfoList' => 'charge_info_list',
        'creditBizOrderId' => 'credit_biz_order_id',
        'creditPayMode' => 'credit_pay_mode',
        'discountAmount' => 'discount_amount',
        'discountGoodsDetail' => 'discount_goods_detail',
        'enterprisePayInfo' => 'enterprise_pay_info',
        'fundBillList' => 'fund_bill_list',
        'gmtPayment' => 'gmt_payment',
        'hybAmount' => 'hyb_amount',
        'invoiceAmount' => 'invoice_amount',
        'mdiscountAmount' => 'mdiscount_amount',
        'openId' => 'open_id',
        'outTradeNo' => 'out_trade_no',
        'payAmount' => 'pay_amount',
        'payCurrency' => 'pay_currency',
        'pointAmount' => 'point_amount',
        'preAuthPayAmount' => 'pre_auth_pay_amount',
        'receiptAmount' => 'receipt_amount',
        'receiptCurrencyType' => 'receipt_currency_type',
        'settleAmount' => 'settle_amount',
        'settleCurrency' => 'settle_currency',
        'settleTransRate' => 'settle_trans_rate',
        'settlementId' => 'settlement_id',
        'storeName' => 'store_name',
        'tapPayInfo' => 'tap_pay_info',
        'totalAmount' => 'total_amount',
        'tradeNo' => 'trade_no',
        'transCurrency' => 'trans_currency',
        'transPayRate' => 'trans_pay_rate',
        'voucherDetailList' => 'voucher_detail_list'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'advanceAmount' => 'setAdvanceAmount',
        'asyncPayApplyStatus' => 'setAsyncPayApplyStatus',
        'asyncPaymentMode' => 'setAsyncPaymentMode',
        'authTradePayMode' => 'setAuthTradePayMode',
        'bkagentRespInfo' => 'setBkagentRespInfo',
        'businessParams' => 'setBusinessParams',
        'buyerLogonId' => 'setBuyerLogonId',
        'buyerOpenId' => 'setBuyerOpenId',
        'buyerPayAmount' => 'setBuyerPayAmount',
        'buyerUserId' => 'setBuyerUserId',
        'buyerUserName' => 'setBuyerUserName',
        'buyerUserType' => 'setBuyerUserType',
        'canTurnToAppPay' => 'setCanTurnToAppPay',
        'cardBalance' => 'setCardBalance',
        'chargeAmount' => 'setChargeAmount',
        'chargeFlags' => 'setChargeFlags',
        'chargeInfoList' => 'setChargeInfoList',
        'creditBizOrderId' => 'setCreditBizOrderId',
        'creditPayMode' => 'setCreditPayMode',
        'discountAmount' => 'setDiscountAmount',
        'discountGoodsDetail' => 'setDiscountGoodsDetail',
        'enterprisePayInfo' => 'setEnterprisePayInfo',
        'fundBillList' => 'setFundBillList',
        'gmtPayment' => 'setGmtPayment',
        'hybAmount' => 'setHybAmount',
        'invoiceAmount' => 'setInvoiceAmount',
        'mdiscountAmount' => 'setMdiscountAmount',
        'openId' => 'setOpenId',
        'outTradeNo' => 'setOutTradeNo',
        'payAmount' => 'setPayAmount',
        'payCurrency' => 'setPayCurrency',
        'pointAmount' => 'setPointAmount',
        'preAuthPayAmount' => 'setPreAuthPayAmount',
        'receiptAmount' => 'setReceiptAmount',
        'receiptCurrencyType' => 'setReceiptCurrencyType',
        'settleAmount' => 'setSettleAmount',
        'settleCurrency' => 'setSettleCurrency',
        'settleTransRate' => 'setSettleTransRate',
        'settlementId' => 'setSettlementId',
        'storeName' => 'setStoreName',
        'tapPayInfo' => 'setTapPayInfo',
        'totalAmount' => 'setTotalAmount',
        'tradeNo' => 'setTradeNo',
        'transCurrency' => 'setTransCurrency',
        'transPayRate' => 'setTransPayRate',
        'voucherDetailList' => 'setVoucherDetailList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'advanceAmount' => 'getAdvanceAmount',
        'asyncPayApplyStatus' => 'getAsyncPayApplyStatus',
        'asyncPaymentMode' => 'getAsyncPaymentMode',
        'authTradePayMode' => 'getAuthTradePayMode',
        'bkagentRespInfo' => 'getBkagentRespInfo',
        'businessParams' => 'getBusinessParams',
        'buyerLogonId' => 'getBuyerLogonId',
        'buyerOpenId' => 'getBuyerOpenId',
        'buyerPayAmount' => 'getBuyerPayAmount',
        'buyerUserId' => 'getBuyerUserId',
        'buyerUserName' => 'getBuyerUserName',
        'buyerUserType' => 'getBuyerUserType',
        'canTurnToAppPay' => 'getCanTurnToAppPay',
        'cardBalance' => 'getCardBalance',
        'chargeAmount' => 'getChargeAmount',
        'chargeFlags' => 'getChargeFlags',
        'chargeInfoList' => 'getChargeInfoList',
        'creditBizOrderId' => 'getCreditBizOrderId',
        'creditPayMode' => 'getCreditPayMode',
        'discountAmount' => 'getDiscountAmount',
        'discountGoodsDetail' => 'getDiscountGoodsDetail',
        'enterprisePayInfo' => 'getEnterprisePayInfo',
        'fundBillList' => 'getFundBillList',
        'gmtPayment' => 'getGmtPayment',
        'hybAmount' => 'getHybAmount',
        'invoiceAmount' => 'getInvoiceAmount',
        'mdiscountAmount' => 'getMdiscountAmount',
        'openId' => 'getOpenId',
        'outTradeNo' => 'getOutTradeNo',
        'payAmount' => 'getPayAmount',
        'payCurrency' => 'getPayCurrency',
        'pointAmount' => 'getPointAmount',
        'preAuthPayAmount' => 'getPreAuthPayAmount',
        'receiptAmount' => 'getReceiptAmount',
        'receiptCurrencyType' => 'getReceiptCurrencyType',
        'settleAmount' => 'getSettleAmount',
        'settleCurrency' => 'getSettleCurrency',
        'settleTransRate' => 'getSettleTransRate',
        'settlementId' => 'getSettlementId',
        'storeName' => 'getStoreName',
        'tapPayInfo' => 'getTapPayInfo',
        'totalAmount' => 'getTotalAmount',
        'tradeNo' => 'getTradeNo',
        'transCurrency' => 'getTransCurrency',
        'transPayRate' => 'getTransPayRate',
        'voucherDetailList' => 'getVoucherDetailList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['advanceAmount'] = $data['advanceAmount'] ?? null;
        $this->container['asyncPayApplyStatus'] = $data['asyncPayApplyStatus'] ?? null;
        $this->container['asyncPaymentMode'] = $data['asyncPaymentMode'] ?? null;
        $this->container['authTradePayMode'] = $data['authTradePayMode'] ?? null;
        $this->container['bkagentRespInfo'] = $data['bkagentRespInfo'] ?? null;
        $this->container['businessParams'] = $data['businessParams'] ?? null;
        $this->container['buyerLogonId'] = $data['buyerLogonId'] ?? null;
        $this->container['buyerOpenId'] = $data['buyerOpenId'] ?? null;
        $this->container['buyerPayAmount'] = $data['buyerPayAmount'] ?? null;
        $this->container['buyerUserId'] = $data['buyerUserId'] ?? null;
        $this->container['buyerUserName'] = $data['buyerUserName'] ?? null;
        $this->container['buyerUserType'] = $data['buyerUserType'] ?? null;
        $this->container['canTurnToAppPay'] = $data['canTurnToAppPay'] ?? null;
        $this->container['cardBalance'] = $data['cardBalance'] ?? null;
        $this->container['chargeAmount'] = $data['chargeAmount'] ?? null;
        $this->container['chargeFlags'] = $data['chargeFlags'] ?? null;
        $this->container['chargeInfoList'] = $data['chargeInfoList'] ?? null;
        $this->container['creditBizOrderId'] = $data['creditBizOrderId'] ?? null;
        $this->container['creditPayMode'] = $data['creditPayMode'] ?? null;
        $this->container['discountAmount'] = $data['discountAmount'] ?? null;
        $this->container['discountGoodsDetail'] = $data['discountGoodsDetail'] ?? null;
        $this->container['enterprisePayInfo'] = $data['enterprisePayInfo'] ?? null;
        $this->container['fundBillList'] = $data['fundBillList'] ?? null;
        $this->container['gmtPayment'] = $data['gmtPayment'] ?? null;
        $this->container['hybAmount'] = $data['hybAmount'] ?? null;
        $this->container['invoiceAmount'] = $data['invoiceAmount'] ?? null;
        $this->container['mdiscountAmount'] = $data['mdiscountAmount'] ?? null;
        $this->container['openId'] = $data['openId'] ?? null;
        $this->container['outTradeNo'] = $data['outTradeNo'] ?? null;
        $this->container['payAmount'] = $data['payAmount'] ?? null;
        $this->container['payCurrency'] = $data['payCurrency'] ?? null;
        $this->container['pointAmount'] = $data['pointAmount'] ?? null;
        $this->container['preAuthPayAmount'] = $data['preAuthPayAmount'] ?? null;
        $this->container['receiptAmount'] = $data['receiptAmount'] ?? null;
        $this->container['receiptCurrencyType'] = $data['receiptCurrencyType'] ?? null;
        $this->container['settleAmount'] = $data['settleAmount'] ?? null;
        $this->container['settleCurrency'] = $data['settleCurrency'] ?? null;
        $this->container['settleTransRate'] = $data['settleTransRate'] ?? null;
        $this->container['settlementId'] = $data['settlementId'] ?? null;
        $this->container['storeName'] = $data['storeName'] ?? null;
        $this->container['tapPayInfo'] = $data['tapPayInfo'] ?? null;
        $this->container['totalAmount'] = $data['totalAmount'] ?? null;
        $this->container['tradeNo'] = $data['tradeNo'] ?? null;
        $this->container['transCurrency'] = $data['transCurrency'] ?? null;
        $this->container['transPayRate'] = $data['transPayRate'] ?? null;
        $this->container['voucherDetailList'] = $data['voucherDetailList'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets advanceAmount
     *
     * @return string|null
     */
    public function getAdvanceAmount()
    {
        return $this->container['advanceAmount'];
    }

    /**
     * Sets advanceAmount
     *
     * @param string|null $advanceAmount 先享后付2.0垫资金额,不返回表示没有走垫资，非空表示垫资支付的金额
     *
     * @return self
     */
    public function setAdvanceAmount($advanceAmount)
    {
        $this->container['advanceAmount'] = $advanceAmount;

        return $this;
    }

    /**
     * Gets asyncPayApplyStatus
     *
     * @return string|null
     */
    public function getAsyncPayApplyStatus()
    {
        return $this->container['asyncPayApplyStatus'];
    }

    /**
     * Sets asyncPayApplyStatus
     *
     * @param string|null $asyncPayApplyStatus 异步支付受理状态，仅异步支付模式且query_options指定async_pay_info时返回。S：受理成功，支付宝内部会在一定期限内捞起任务推进支付，直到支付成功或超出可重试期限；其它：受理结果未知，可通过查询接口获取交易状态。
     *
     * @return self
     */
    public function setAsyncPayApplyStatus($asyncPayApplyStatus)
    {
        $this->container['asyncPayApplyStatus'] = $asyncPayApplyStatus;

        return $this;
    }

    /**
     * Gets asyncPaymentMode
     *
     * @return string|null
     */
    public function getAsyncPaymentMode()
    {
        return $this->container['asyncPaymentMode'];
    }

    /**
     * Sets asyncPaymentMode
     *
     * @param string|null $asyncPaymentMode 异步支付模式，目前有五种值： ASYNC_DELAY_PAY(异步延时付款); ASYNC_REALTIME_PAY(异步准实时付款); SYNC_DIRECT_PAY(同步直接扣款); NORMAL_ASYNC_PAY(纯异步付款); QUOTA_OCCUPYIED_ASYNC_PAY(异步支付并且预占了先享后付额度);
     *
     * @return self
     */
    public function setAsyncPaymentMode($asyncPaymentMode)
    {
        $this->container['asyncPaymentMode'] = $asyncPaymentMode;

        return $this;
    }

    /**
     * Gets authTradePayMode
     *
     * @return string|null
     */
    public function getAuthTradePayMode()
    {
        return $this->container['authTradePayMode'];
    }

    /**
     * Sets authTradePayMode
     *
     * @param string|null $authTradePayMode 预授权支付模式，该参数仅在信用预授权支付场景下返回。信用预授权支付：CREDIT_PREAUTH_PAY
     *
     * @return self
     */
    public function setAuthTradePayMode($authTradePayMode)
    {
        $this->container['authTradePayMode'] = $authTradePayMode;

        return $this;
    }

    /**
     * Gets bkagentRespInfo
     *
     * @return \Alipay\OpenAPISDK\Model\BkAgentRespInfo|null
     */
    public function getBkagentRespInfo()
    {
        return $this->container['bkagentRespInfo'];
    }

    /**
     * Sets bkagentRespInfo
     *
     * @param \Alipay\OpenAPISDK\Model\BkAgentRespInfo|null $bkagentRespInfo bkagentRespInfo
     *
     * @return self
     */
    public function setBkagentRespInfo($bkagentRespInfo)
    {
        $this->container['bkagentRespInfo'] = $bkagentRespInfo;

        return $this;
    }

    /**
     * Gets businessParams
     *
     * @return string|null
     */
    public function getBusinessParams()
    {
        return $this->container['businessParams'];
    }

    /**
     * Sets businessParams
     *
     * @param string|null $businessParams 商户传入业务信息，具体值要和支付宝约定  将商户传入信息分发给相应系统，应用于安全，营销等参数直传场景  格式为json格式
     *
     * @return self
     */
    public function setBusinessParams($businessParams)
    {
        $this->container['businessParams'] = $businessParams;

        return $this;
    }

    /**
     * Gets buyerLogonId
     *
     * @return string|null
     */
    public function getBuyerLogonId()
    {
        return $this->container['buyerLogonId'];
    }

    /**
     * Sets buyerLogonId
     *
     * @param string|null $buyerLogonId 买家支付宝账号
     *
     * @return self
     */
    public function setBuyerLogonId($buyerLogonId)
    {
        $this->container['buyerLogonId'] = $buyerLogonId;

        return $this;
    }

    /**
     * Gets buyerOpenId
     *
     * @return string|null
     */
    public function getBuyerOpenId()
    {
        return $this->container['buyerOpenId'];
    }

    /**
     * Sets buyerOpenId
     *
     * @param string|null $buyerOpenId 买家支付宝用户唯一标识
     *
     * @return self
     */
    public function setBuyerOpenId($buyerOpenId)
    {
        $this->container['buyerOpenId'] = $buyerOpenId;

        return $this;
    }

    /**
     * Gets buyerPayAmount
     *
     * @return string|null
     */
    public function getBuyerPayAmount()
    {
        return $this->container['buyerPayAmount'];
    }

    /**
     * Sets buyerPayAmount
     *
     * @param string|null $buyerPayAmount 买家付款的金额
     *
     * @return self
     */
    public function setBuyerPayAmount($buyerPayAmount)
    {
        $this->container['buyerPayAmount'] = $buyerPayAmount;

        return $this;
    }

    /**
     * Gets buyerUserId
     *
     * @return string|null
     */
    public function getBuyerUserId()
    {
        return $this->container['buyerUserId'];
    }

    /**
     * Sets buyerUserId
     *
     * @param string|null $buyerUserId 买家在支付宝的用户id
     *
     * @return self
     */
    public function setBuyerUserId($buyerUserId)
    {
        $this->container['buyerUserId'] = $buyerUserId;

        return $this;
    }

    /**
     * Gets buyerUserName
     *
     * @return string|null
     */
    public function getBuyerUserName()
    {
        return $this->container['buyerUserName'];
    }

    /**
     * Sets buyerUserName
     *
     * @param string|null $buyerUserName 买家名称；  买家为个人用户时为买家姓名，买家为企业用户时为企业名称；  默认不返回该信息，需与支付宝约定后配置返回；
     *
     * @return self
     */
    public function setBuyerUserName($buyerUserName)
    {
        $this->container['buyerUserName'] = $buyerUserName;

        return $this;
    }

    /**
     * Gets buyerUserType
     *
     * @return string|null
     */
    public function getBuyerUserType()
    {
        return $this->container['buyerUserType'];
    }

    /**
     * Sets buyerUserType
     *
     * @param string|null $buyerUserType 买家用户类型。
     *
     * @return self
     */
    public function setBuyerUserType($buyerUserType)
    {
        $this->container['buyerUserType'] = $buyerUserType;

        return $this;
    }

    /**
     * Gets canTurnToAppPay
     *
     * @return string|null
     */
    public function getCanTurnToAppPay()
    {
        return $this->container['canTurnToAppPay'];
    }

    /**
     * Sets canTurnToAppPay
     *
     * @param string|null $canTurnToAppPay 是否可以转为app支付，仅当商户代扣失败场景才会返回该字段信息
     *
     * @return self
     */
    public function setCanTurnToAppPay($canTurnToAppPay)
    {
        $this->container['canTurnToAppPay'] = $canTurnToAppPay;

        return $this;
    }

    /**
     * Gets cardBalance
     *
     * @return string|null
     */
    public function getCardBalance()
    {
        return $this->container['cardBalance'];
    }

    /**
     * Sets cardBalance
     *
     * @param string|null $cardBalance 支付宝卡余额
     *
     * @return self
     */
    public function setCardBalance($cardBalance)
    {
        $this->container['cardBalance'] = $cardBalance;

        return $this;
    }

    /**
     * Gets chargeAmount
     *
     * @return string|null
     */
    public function getChargeAmount()
    {
        return $this->container['chargeAmount'];
    }

    /**
     * Sets chargeAmount
     *
     * @param string|null $chargeAmount 该笔交易针对收款方的收费金额； 只在机构间联模式下返回，其它场景下不返回该字段；
     *
     * @return self
     */
    public function setChargeAmount($chargeAmount)
    {
        $this->container['chargeAmount'] = $chargeAmount;

        return $this;
    }

    /**
     * Gets chargeFlags
     *
     * @return string|null
     */
    public function getChargeFlags()
    {
        return $this->container['chargeFlags'];
    }

    /**
     * Sets chargeFlags
     *
     * @param string|null $chargeFlags 费率活动标识。 当交易享受特殊行业或活动费率时，返回该场景的标识。具体场景如下： trade_special_00：订单优惠费率； industry_special_on_00：线上行业特殊费率0； industry_special_on_01：线上行业特殊费率1； industry_special_00：线下行业特殊费率0； industry_special_01：线下行业特殊费率1； bluesea_1：蓝海活动优惠费率标签； 注：只在机构间联模式下返回，其它场景下不返回该字段；
     *
     * @return self
     */
    public function setChargeFlags($chargeFlags)
    {
        $this->container['chargeFlags'] = $chargeFlags;

        return $this;
    }

    /**
     * Gets chargeInfoList
     *
     * @return \Alipay\OpenAPISDK\Model\ChargeInfo|null
     */
    public function getChargeInfoList()
    {
        return $this->container['chargeInfoList'];
    }

    /**
     * Sets chargeInfoList
     *
     * @param \Alipay\OpenAPISDK\Model\ChargeInfo|null $chargeInfoList chargeInfoList
     *
     * @return self
     */
    public function setChargeInfoList($chargeInfoList)
    {
        $this->container['chargeInfoList'] = $chargeInfoList;

        return $this;
    }

    /**
     * Gets creditBizOrderId
     *
     * @return string|null
     */
    public function getCreditBizOrderId()
    {
        return $this->container['creditBizOrderId'];
    }

    /**
     * Sets creditBizOrderId
     *
     * @param string|null $creditBizOrderId 信用业务单号。信用支付场景才有值。先用后付产品里是芝麻订单号。
     *
     * @return self
     */
    public function setCreditBizOrderId($creditBizOrderId)
    {
        $this->container['creditBizOrderId'] = $creditBizOrderId;

        return $this;
    }

    /**
     * Gets creditPayMode
     *
     * @return string|null
     */
    public function getCreditPayMode()
    {
        return $this->container['creditPayMode'];
    }

    /**
     * Sets creditPayMode
     *
     * @param string|null $creditPayMode 信用支付模式。表示订单是采用信用支付方式（支付时买家没有出资，需要后续履约）。\"creditAdvanceV2\"表示芝麻先用后付模式，用户后续需要履约扣款。 此字段只有信用支付场景才有值，商户需要根据字段值单独处理。此字段以后可能扩展其他值，建议商户使用白名单方式识别，对于未识别的值做失败处理，并联系支付宝技术支持人员。
     *
     * @return self
     */
    public function setCreditPayMode($creditPayMode)
    {
        $this->container['creditPayMode'] = $creditPayMode;

        return $this;
    }

    /**
     * Gets discountAmount
     *
     * @return string|null
     */
    public function getDiscountAmount()
    {
        return $this->container['discountAmount'];
    }

    /**
     * Sets discountAmount
     *
     * @param string|null $discountAmount 平台优惠金额
     *
     * @return self
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->container['discountAmount'] = $discountAmount;

        return $this;
    }

    /**
     * Gets discountGoodsDetail
     *
     * @return string|null
     */
    public function getDiscountGoodsDetail()
    {
        return $this->container['discountGoodsDetail'];
    }

    /**
     * Sets discountGoodsDetail
     *
     * @param string|null $discountGoodsDetail 本次交易支付所使用的单品券优惠的商品优惠信息。 只有在query_options中指定时才返回该字段信息。
     *
     * @return self
     */
    public function setDiscountGoodsDetail($discountGoodsDetail)
    {
        $this->container['discountGoodsDetail'] = $discountGoodsDetail;

        return $this;
    }

    /**
     * Gets enterprisePayInfo
     *
     * @return \Alipay\OpenAPISDK\Model\EnterprisePayInfo|null
     */
    public function getEnterprisePayInfo()
    {
        return $this->container['enterprisePayInfo'];
    }

    /**
     * Sets enterprisePayInfo
     *
     * @param \Alipay\OpenAPISDK\Model\EnterprisePayInfo|null $enterprisePayInfo enterprisePayInfo
     *
     * @return self
     */
    public function setEnterprisePayInfo($enterprisePayInfo)
    {
        $this->container['enterprisePayInfo'] = $enterprisePayInfo;

        return $this;
    }

    /**
     * Gets fundBillList
     *
     * @return \Alipay\OpenAPISDK\Model\TradeFundBill[]|null
     */
    public function getFundBillList()
    {
        return $this->container['fundBillList'];
    }

    /**
     * Sets fundBillList
     *
     * @param \Alipay\OpenAPISDK\Model\TradeFundBill[]|null $fundBillList 交易支付使用的资金渠道。 只有在签约中指定需要返回资金明细，或者入参的query_options中指定时才返回该字段信息。
     *
     * @return self
     */
    public function setFundBillList($fundBillList)
    {
        $this->container['fundBillList'] = $fundBillList;

        return $this;
    }

    /**
     * Gets gmtPayment
     *
     * @return string|null
     */
    public function getGmtPayment()
    {
        return $this->container['gmtPayment'];
    }

    /**
     * Sets gmtPayment
     *
     * @param string|null $gmtPayment 交易支付时间
     *
     * @return self
     */
    public function setGmtPayment($gmtPayment)
    {
        $this->container['gmtPayment'] = $gmtPayment;

        return $this;
    }

    /**
     * Gets hybAmount
     *
     * @return string|null
     */
    public function getHybAmount()
    {
        return $this->container['hybAmount'];
    }

    /**
     * Sets hybAmount
     *
     * @param string|null $hybAmount 惠营宝回票金额
     *
     * @return self
     */
    public function setHybAmount($hybAmount)
    {
        $this->container['hybAmount'] = $hybAmount;

        return $this;
    }

    /**
     * Gets invoiceAmount
     *
     * @return string|null
     */
    public function getInvoiceAmount()
    {
        return $this->container['invoiceAmount'];
    }

    /**
     * Sets invoiceAmount
     *
     * @param string|null $invoiceAmount 交易中可给用户开具发票的金额
     *
     * @return self
     */
    public function setInvoiceAmount($invoiceAmount)
    {
        $this->container['invoiceAmount'] = $invoiceAmount;

        return $this;
    }

    /**
     * Gets mdiscountAmount
     *
     * @return string|null
     */
    public function getMdiscountAmount()
    {
        return $this->container['mdiscountAmount'];
    }

    /**
     * Sets mdiscountAmount
     *
     * @param string|null $mdiscountAmount 商家优惠金额
     *
     * @return self
     */
    public function setMdiscountAmount($mdiscountAmount)
    {
        $this->container['mdiscountAmount'] = $mdiscountAmount;

        return $this;
    }

    /**
     * Gets openId
     *
     * @return string|null
     */
    public function getOpenId()
    {
        return $this->container['openId'];
    }

    /**
     * Sets openId
     *
     * @param string|null $openId 买家支付宝用户号,该参数已废弃，请不要使用
     *
     * @return self
     */
    public function setOpenId($openId)
    {
        $this->container['openId'] = $openId;

        return $this;
    }

    /**
     * Gets outTradeNo
     *
     * @return string|null
     */
    public function getOutTradeNo()
    {
        return $this->container['outTradeNo'];
    }

    /**
     * Sets outTradeNo
     *
     * @param string|null $outTradeNo 商户订单号
     *
     * @return self
     */
    public function setOutTradeNo($outTradeNo)
    {
        $this->container['outTradeNo'] = $outTradeNo;

        return $this;
    }

    /**
     * Gets payAmount
     *
     * @return string|null
     */
    public function getPayAmount()
    {
        return $this->container['payAmount'];
    }

    /**
     * Sets payAmount
     *
     * @param string|null $payAmount 支付币种订单金额
     *
     * @return self
     */
    public function setPayAmount($payAmount)
    {
        $this->container['payAmount'] = $payAmount;

        return $this;
    }

    /**
     * Gets payCurrency
     *
     * @return string|null
     */
    public function getPayCurrency()
    {
        return $this->container['payCurrency'];
    }

    /**
     * Sets payCurrency
     *
     * @param string|null $payCurrency 支付币种
     *
     * @return self
     */
    public function setPayCurrency($payCurrency)
    {
        $this->container['payCurrency'] = $payCurrency;

        return $this;
    }

    /**
     * Gets pointAmount
     *
     * @return string|null
     */
    public function getPointAmount()
    {
        return $this->container['pointAmount'];
    }

    /**
     * Sets pointAmount
     *
     * @param string|null $pointAmount 使用集分宝付款的金额
     *
     * @return self
     */
    public function setPointAmount($pointAmount)
    {
        $this->container['pointAmount'] = $pointAmount;

        return $this;
    }

    /**
     * Gets preAuthPayAmount
     *
     * @return string|null
     */
    public function getPreAuthPayAmount()
    {
        return $this->container['preAuthPayAmount'];
    }

    /**
     * Sets preAuthPayAmount
     *
     * @param string|null $preAuthPayAmount 当用户使用芝麻信用先享后付时，会返回该字段，代表整笔交易的原始待履约金额，单位元。
     *
     * @return self
     */
    public function setPreAuthPayAmount($preAuthPayAmount)
    {
        $this->container['preAuthPayAmount'] = $preAuthPayAmount;

        return $this;
    }

    /**
     * Gets receiptAmount
     *
     * @return string|null
     */
    public function getReceiptAmount()
    {
        return $this->container['receiptAmount'];
    }

    /**
     * Sets receiptAmount
     *
     * @param string|null $receiptAmount 实收金额
     *
     * @return self
     */
    public function setReceiptAmount($receiptAmount)
    {
        $this->container['receiptAmount'] = $receiptAmount;

        return $this;
    }

    /**
     * Gets receiptCurrencyType
     *
     * @return string|null
     */
    public function getReceiptCurrencyType()
    {
        return $this->container['receiptCurrencyType'];
    }

    /**
     * Sets receiptCurrencyType
     *
     * @param string|null $receiptCurrencyType 收款资金类型，当交易收款资金为数字人民币时返回值为“DC”，否则不返回该字段。
     *
     * @return self
     */
    public function setReceiptCurrencyType($receiptCurrencyType)
    {
        $this->container['receiptCurrencyType'] = $receiptCurrencyType;

        return $this;
    }

    /**
     * Gets settleAmount
     *
     * @return string|null
     */
    public function getSettleAmount()
    {
        return $this->container['settleAmount'];
    }

    /**
     * Sets settleAmount
     *
     * @param string|null $settleAmount 结算币种订单金额
     *
     * @return self
     */
    public function setSettleAmount($settleAmount)
    {
        $this->container['settleAmount'] = $settleAmount;

        return $this;
    }

    /**
     * Gets settleCurrency
     *
     * @return string|null
     */
    public function getSettleCurrency()
    {
        return $this->container['settleCurrency'];
    }

    /**
     * Sets settleCurrency
     *
     * @param string|null $settleCurrency 商户指定的结算币种，目前支持英镑：GBP、港币：HKD、美元：USD、新加坡元：SGD、日元：JPY、加拿大元：CAD、澳元：AUD、欧元：EUR、新西兰元：NZD、韩元：KRW、泰铢：THB、瑞士法郎：CHF、瑞典克朗：SEK、丹麦克朗：DKK、挪威克朗：NOK、马来西亚林吉特：MYR、印尼卢比：IDR、菲律宾比索：PHP、毛里求斯卢比：MUR、以色列新谢克尔：ILS、斯里兰卡卢比：LKR、俄罗斯卢布：RUB、阿联酋迪拉姆：AED、捷克克朗：CZK、南非兰特：ZAR、人民币：CNY
     *
     * @return self
     */
    public function setSettleCurrency($settleCurrency)
    {
        $this->container['settleCurrency'] = $settleCurrency;

        return $this;
    }

    /**
     * Gets settleTransRate
     *
     * @return string|null
     */
    public function getSettleTransRate()
    {
        return $this->container['settleTransRate'];
    }

    /**
     * Sets settleTransRate
     *
     * @param string|null $settleTransRate 结算币种兑换标价币种汇率
     *
     * @return self
     */
    public function setSettleTransRate($settleTransRate)
    {
        $this->container['settleTransRate'] = $settleTransRate;

        return $this;
    }

    /**
     * Gets settlementId
     *
     * @return string|null
     */
    public function getSettlementId()
    {
        return $this->container['settlementId'];
    }

    /**
     * Sets settlementId
     *
     * @param string|null $settlementId 支付清算编号，用于清算对账使用； 只在机构间联模式下返回，其它场景下不返回该字段；
     *
     * @return self
     */
    public function setSettlementId($settlementId)
    {
        $this->container['settlementId'] = $settlementId;

        return $this;
    }

    /**
     * Gets storeName
     *
     * @return string|null
     */
    public function getStoreName()
    {
        return $this->container['storeName'];
    }

    /**
     * Sets storeName
     *
     * @param string|null $storeName 发生支付交易的商户门店名称
     *
     * @return self
     */
    public function setStoreName($storeName)
    {
        $this->container['storeName'] = $storeName;

        return $this;
    }

    /**
     * Gets tapPayInfo
     *
     * @return \Alipay\OpenAPISDK\Model\TapPayInfo|null
     */
    public function getTapPayInfo()
    {
        return $this->container['tapPayInfo'];
    }

    /**
     * Sets tapPayInfo
     *
     * @param \Alipay\OpenAPISDK\Model\TapPayInfo|null $tapPayInfo tapPayInfo
     *
     * @return self
     */
    public function setTapPayInfo($tapPayInfo)
    {
        $this->container['tapPayInfo'] = $tapPayInfo;

        return $this;
    }

    /**
     * Gets totalAmount
     *
     * @return string|null
     */
    public function getTotalAmount()
    {
        return $this->container['totalAmount'];
    }

    /**
     * Sets totalAmount
     *
     * @param string|null $totalAmount 交易金额
     *
     * @return self
     */
    public function setTotalAmount($totalAmount)
    {
        $this->container['totalAmount'] = $totalAmount;

        return $this;
    }

    /**
     * Gets tradeNo
     *
     * @return string|null
     */
    public function getTradeNo()
    {
        return $this->container['tradeNo'];
    }

    /**
     * Sets tradeNo
     *
     * @param string|null $tradeNo 支付宝交易号
     *
     * @return self
     */
    public function setTradeNo($tradeNo)
    {
        $this->container['tradeNo'] = $tradeNo;

        return $this;
    }

    /**
     * Gets transCurrency
     *
     * @return string|null
     */
    public function getTransCurrency()
    {
        return $this->container['transCurrency'];
    }

    /**
     * Sets transCurrency
     *
     * @param string|null $transCurrency 标价币种, total_amount对应的币种单位。目前支持英镑：GBP、港币：HKD、美元：USD、新加坡元：SGD、日元：JPY、加拿大元：CAD、澳元：AUD、欧元：EUR、新西兰元：NZD、韩元：KRW、泰铢：THB、瑞士法郎：CHF、瑞典克朗：SEK、丹麦克朗：DKK、挪威克朗：NOK、马来西亚林吉特：MYR、印尼卢比：IDR、菲律宾比索：PHP、毛里求斯卢比：MUR、以色列新谢克尔：ILS、斯里兰卡卢比：LKR、俄罗斯卢布：RUB、阿联酋迪拉姆：AED、捷克克朗：CZK、南非兰特：ZAR、人民币：CNY
     *
     * @return self
     */
    public function setTransCurrency($transCurrency)
    {
        $this->container['transCurrency'] = $transCurrency;

        return $this;
    }

    /**
     * Gets transPayRate
     *
     * @return string|null
     */
    public function getTransPayRate()
    {
        return $this->container['transPayRate'];
    }

    /**
     * Sets transPayRate
     *
     * @param string|null $transPayRate 标价币种兑换支付币种汇率
     *
     * @return self
     */
    public function setTransPayRate($transPayRate)
    {
        $this->container['transPayRate'] = $transPayRate;

        return $this;
    }

    /**
     * Gets voucherDetailList
     *
     * @return \Alipay\OpenAPISDK\Model\VoucherDetail[]|null
     */
    public function getVoucherDetailList()
    {
        return $this->container['voucherDetailList'];
    }

    /**
     * Sets voucherDetailList
     *
     * @param \Alipay\OpenAPISDK\Model\VoucherDetail[]|null $voucherDetailList 本交易支付时使用的所有优惠券信息。 只有在query_options中指定时才返回该字段信息。
     *
     * @return self
     */
    public function setVoucherDetailList($voucherDetailList)
    {
        $this->container['voucherDetailList'] = $voucherDetailList;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


