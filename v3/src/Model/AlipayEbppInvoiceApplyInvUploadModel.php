<?php
/**
 * AlipayEbppInvoiceApplyInvUploadModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AlipayEbppInvoiceApplyInvUploadModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AlipayEbppInvoiceApplyInvUploadModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AlipayEbppInvoiceApplyInvUploadModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'antiFakeCode' => 'string',
        'applyId' => 'string',
        'bizErrorCode' => 'string',
        'bizErrorMsg' => 'string',
        'businessType' => 'int',
        'checkCode' => 'string',
        'createResult' => 'string',
        'deviceNo' => 'string',
        'invoiceAmount' => 'string',
        'invoiceCode' => 'string',
        'invoiceDate' => 'string',
        'invoiceFileContent' => 'string',
        'invoiceFileType' => 'string',
        'invoiceItems' => '\Alipay\OpenAPISDK\Model\InvoiceItem',
        'invoiceKind' => 'int',
        'invoiceMemo' => 'string',
        'invoiceNo' => 'string',
        'invoiceType' => 'string',
        'levyType' => 'string',
        'normalInvoiceCode' => 'string',
        'normalInvoiceNo' => 'string',
        'payeeAddress' => 'string',
        'payeeBankAccountId' => 'string',
        'payeeBankName' => 'string',
        'payeeChecker' => 'string',
        'payeeName' => 'string',
        'payeeOperator' => 'string',
        'payeePhone' => 'string',
        'payeeReceiver' => 'string',
        'payeeRegisterNo' => 'string',
        'payerAddress' => 'string',
        'payerBankAccountId' => 'string',
        'payerBankName' => 'string',
        'payerEmail' => 'string',
        'payerName' => 'string',
        'payerPhone' => 'string',
        'payerRegisterNo' => 'string',
        'platformCode' => 'string',
        'platformTid' => 'string',
        'platformUserId' => 'string',
        'qrCode' => 'string',
        'receiveMobile' => 'string',
        'redNoticeNo' => 'string',
        'serialNo' => 'string',
        'source' => 'string',
        'specialFlag' => 'string',
        'sumPrice' => 'string',
        'sumTax' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'antiFakeCode' => null,
        'applyId' => null,
        'bizErrorCode' => null,
        'bizErrorMsg' => null,
        'businessType' => null,
        'checkCode' => null,
        'createResult' => null,
        'deviceNo' => null,
        'invoiceAmount' => null,
        'invoiceCode' => null,
        'invoiceDate' => null,
        'invoiceFileContent' => null,
        'invoiceFileType' => null,
        'invoiceItems' => null,
        'invoiceKind' => null,
        'invoiceMemo' => null,
        'invoiceNo' => null,
        'invoiceType' => null,
        'levyType' => null,
        'normalInvoiceCode' => null,
        'normalInvoiceNo' => null,
        'payeeAddress' => null,
        'payeeBankAccountId' => null,
        'payeeBankName' => null,
        'payeeChecker' => null,
        'payeeName' => null,
        'payeeOperator' => null,
        'payeePhone' => null,
        'payeeReceiver' => null,
        'payeeRegisterNo' => null,
        'payerAddress' => null,
        'payerBankAccountId' => null,
        'payerBankName' => null,
        'payerEmail' => null,
        'payerName' => null,
        'payerPhone' => null,
        'payerRegisterNo' => null,
        'platformCode' => null,
        'platformTid' => null,
        'platformUserId' => null,
        'qrCode' => null,
        'receiveMobile' => null,
        'redNoticeNo' => null,
        'serialNo' => null,
        'source' => null,
        'specialFlag' => null,
        'sumPrice' => null,
        'sumTax' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'antiFakeCode' => 'anti_fake_code',
        'applyId' => 'apply_id',
        'bizErrorCode' => 'biz_error_code',
        'bizErrorMsg' => 'biz_error_msg',
        'businessType' => 'business_type',
        'checkCode' => 'check_code',
        'createResult' => 'create_result',
        'deviceNo' => 'device_no',
        'invoiceAmount' => 'invoice_amount',
        'invoiceCode' => 'invoice_code',
        'invoiceDate' => 'invoice_date',
        'invoiceFileContent' => 'invoice_file_content',
        'invoiceFileType' => 'invoice_file_type',
        'invoiceItems' => 'invoice_items',
        'invoiceKind' => 'invoice_kind',
        'invoiceMemo' => 'invoice_memo',
        'invoiceNo' => 'invoice_no',
        'invoiceType' => 'invoice_type',
        'levyType' => 'levy_type',
        'normalInvoiceCode' => 'normal_invoice_code',
        'normalInvoiceNo' => 'normal_invoice_no',
        'payeeAddress' => 'payee_address',
        'payeeBankAccountId' => 'payee_bank_account_id',
        'payeeBankName' => 'payee_bank_name',
        'payeeChecker' => 'payee_checker',
        'payeeName' => 'payee_name',
        'payeeOperator' => 'payee_operator',
        'payeePhone' => 'payee_phone',
        'payeeReceiver' => 'payee_receiver',
        'payeeRegisterNo' => 'payee_register_no',
        'payerAddress' => 'payer_address',
        'payerBankAccountId' => 'payer_bank_account_id',
        'payerBankName' => 'payer_bank_name',
        'payerEmail' => 'payer_email',
        'payerName' => 'payer_name',
        'payerPhone' => 'payer_phone',
        'payerRegisterNo' => 'payer_register_no',
        'platformCode' => 'platform_code',
        'platformTid' => 'platform_tid',
        'platformUserId' => 'platform_user_id',
        'qrCode' => 'qr_code',
        'receiveMobile' => 'receive_mobile',
        'redNoticeNo' => 'red_notice_no',
        'serialNo' => 'serial_no',
        'source' => 'source',
        'specialFlag' => 'special_flag',
        'sumPrice' => 'sum_price',
        'sumTax' => 'sum_tax'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'antiFakeCode' => 'setAntiFakeCode',
        'applyId' => 'setApplyId',
        'bizErrorCode' => 'setBizErrorCode',
        'bizErrorMsg' => 'setBizErrorMsg',
        'businessType' => 'setBusinessType',
        'checkCode' => 'setCheckCode',
        'createResult' => 'setCreateResult',
        'deviceNo' => 'setDeviceNo',
        'invoiceAmount' => 'setInvoiceAmount',
        'invoiceCode' => 'setInvoiceCode',
        'invoiceDate' => 'setInvoiceDate',
        'invoiceFileContent' => 'setInvoiceFileContent',
        'invoiceFileType' => 'setInvoiceFileType',
        'invoiceItems' => 'setInvoiceItems',
        'invoiceKind' => 'setInvoiceKind',
        'invoiceMemo' => 'setInvoiceMemo',
        'invoiceNo' => 'setInvoiceNo',
        'invoiceType' => 'setInvoiceType',
        'levyType' => 'setLevyType',
        'normalInvoiceCode' => 'setNormalInvoiceCode',
        'normalInvoiceNo' => 'setNormalInvoiceNo',
        'payeeAddress' => 'setPayeeAddress',
        'payeeBankAccountId' => 'setPayeeBankAccountId',
        'payeeBankName' => 'setPayeeBankName',
        'payeeChecker' => 'setPayeeChecker',
        'payeeName' => 'setPayeeName',
        'payeeOperator' => 'setPayeeOperator',
        'payeePhone' => 'setPayeePhone',
        'payeeReceiver' => 'setPayeeReceiver',
        'payeeRegisterNo' => 'setPayeeRegisterNo',
        'payerAddress' => 'setPayerAddress',
        'payerBankAccountId' => 'setPayerBankAccountId',
        'payerBankName' => 'setPayerBankName',
        'payerEmail' => 'setPayerEmail',
        'payerName' => 'setPayerName',
        'payerPhone' => 'setPayerPhone',
        'payerRegisterNo' => 'setPayerRegisterNo',
        'platformCode' => 'setPlatformCode',
        'platformTid' => 'setPlatformTid',
        'platformUserId' => 'setPlatformUserId',
        'qrCode' => 'setQrCode',
        'receiveMobile' => 'setReceiveMobile',
        'redNoticeNo' => 'setRedNoticeNo',
        'serialNo' => 'setSerialNo',
        'source' => 'setSource',
        'specialFlag' => 'setSpecialFlag',
        'sumPrice' => 'setSumPrice',
        'sumTax' => 'setSumTax'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'antiFakeCode' => 'getAntiFakeCode',
        'applyId' => 'getApplyId',
        'bizErrorCode' => 'getBizErrorCode',
        'bizErrorMsg' => 'getBizErrorMsg',
        'businessType' => 'getBusinessType',
        'checkCode' => 'getCheckCode',
        'createResult' => 'getCreateResult',
        'deviceNo' => 'getDeviceNo',
        'invoiceAmount' => 'getInvoiceAmount',
        'invoiceCode' => 'getInvoiceCode',
        'invoiceDate' => 'getInvoiceDate',
        'invoiceFileContent' => 'getInvoiceFileContent',
        'invoiceFileType' => 'getInvoiceFileType',
        'invoiceItems' => 'getInvoiceItems',
        'invoiceKind' => 'getInvoiceKind',
        'invoiceMemo' => 'getInvoiceMemo',
        'invoiceNo' => 'getInvoiceNo',
        'invoiceType' => 'getInvoiceType',
        'levyType' => 'getLevyType',
        'normalInvoiceCode' => 'getNormalInvoiceCode',
        'normalInvoiceNo' => 'getNormalInvoiceNo',
        'payeeAddress' => 'getPayeeAddress',
        'payeeBankAccountId' => 'getPayeeBankAccountId',
        'payeeBankName' => 'getPayeeBankName',
        'payeeChecker' => 'getPayeeChecker',
        'payeeName' => 'getPayeeName',
        'payeeOperator' => 'getPayeeOperator',
        'payeePhone' => 'getPayeePhone',
        'payeeReceiver' => 'getPayeeReceiver',
        'payeeRegisterNo' => 'getPayeeRegisterNo',
        'payerAddress' => 'getPayerAddress',
        'payerBankAccountId' => 'getPayerBankAccountId',
        'payerBankName' => 'getPayerBankName',
        'payerEmail' => 'getPayerEmail',
        'payerName' => 'getPayerName',
        'payerPhone' => 'getPayerPhone',
        'payerRegisterNo' => 'getPayerRegisterNo',
        'platformCode' => 'getPlatformCode',
        'platformTid' => 'getPlatformTid',
        'platformUserId' => 'getPlatformUserId',
        'qrCode' => 'getQrCode',
        'receiveMobile' => 'getReceiveMobile',
        'redNoticeNo' => 'getRedNoticeNo',
        'serialNo' => 'getSerialNo',
        'source' => 'getSource',
        'specialFlag' => 'getSpecialFlag',
        'sumPrice' => 'getSumPrice',
        'sumTax' => 'getSumTax'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['antiFakeCode'] = $data['antiFakeCode'] ?? null;
        $this->container['applyId'] = $data['applyId'] ?? null;
        $this->container['bizErrorCode'] = $data['bizErrorCode'] ?? null;
        $this->container['bizErrorMsg'] = $data['bizErrorMsg'] ?? null;
        $this->container['businessType'] = $data['businessType'] ?? null;
        $this->container['checkCode'] = $data['checkCode'] ?? null;
        $this->container['createResult'] = $data['createResult'] ?? null;
        $this->container['deviceNo'] = $data['deviceNo'] ?? null;
        $this->container['invoiceAmount'] = $data['invoiceAmount'] ?? null;
        $this->container['invoiceCode'] = $data['invoiceCode'] ?? null;
        $this->container['invoiceDate'] = $data['invoiceDate'] ?? null;
        $this->container['invoiceFileContent'] = $data['invoiceFileContent'] ?? null;
        $this->container['invoiceFileType'] = $data['invoiceFileType'] ?? null;
        $this->container['invoiceItems'] = $data['invoiceItems'] ?? null;
        $this->container['invoiceKind'] = $data['invoiceKind'] ?? null;
        $this->container['invoiceMemo'] = $data['invoiceMemo'] ?? null;
        $this->container['invoiceNo'] = $data['invoiceNo'] ?? null;
        $this->container['invoiceType'] = $data['invoiceType'] ?? null;
        $this->container['levyType'] = $data['levyType'] ?? null;
        $this->container['normalInvoiceCode'] = $data['normalInvoiceCode'] ?? null;
        $this->container['normalInvoiceNo'] = $data['normalInvoiceNo'] ?? null;
        $this->container['payeeAddress'] = $data['payeeAddress'] ?? null;
        $this->container['payeeBankAccountId'] = $data['payeeBankAccountId'] ?? null;
        $this->container['payeeBankName'] = $data['payeeBankName'] ?? null;
        $this->container['payeeChecker'] = $data['payeeChecker'] ?? null;
        $this->container['payeeName'] = $data['payeeName'] ?? null;
        $this->container['payeeOperator'] = $data['payeeOperator'] ?? null;
        $this->container['payeePhone'] = $data['payeePhone'] ?? null;
        $this->container['payeeReceiver'] = $data['payeeReceiver'] ?? null;
        $this->container['payeeRegisterNo'] = $data['payeeRegisterNo'] ?? null;
        $this->container['payerAddress'] = $data['payerAddress'] ?? null;
        $this->container['payerBankAccountId'] = $data['payerBankAccountId'] ?? null;
        $this->container['payerBankName'] = $data['payerBankName'] ?? null;
        $this->container['payerEmail'] = $data['payerEmail'] ?? null;
        $this->container['payerName'] = $data['payerName'] ?? null;
        $this->container['payerPhone'] = $data['payerPhone'] ?? null;
        $this->container['payerRegisterNo'] = $data['payerRegisterNo'] ?? null;
        $this->container['platformCode'] = $data['platformCode'] ?? null;
        $this->container['platformTid'] = $data['platformTid'] ?? null;
        $this->container['platformUserId'] = $data['platformUserId'] ?? null;
        $this->container['qrCode'] = $data['qrCode'] ?? null;
        $this->container['receiveMobile'] = $data['receiveMobile'] ?? null;
        $this->container['redNoticeNo'] = $data['redNoticeNo'] ?? null;
        $this->container['serialNo'] = $data['serialNo'] ?? null;
        $this->container['source'] = $data['source'] ?? null;
        $this->container['specialFlag'] = $data['specialFlag'] ?? null;
        $this->container['sumPrice'] = $data['sumPrice'] ?? null;
        $this->container['sumTax'] = $data['sumTax'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets antiFakeCode
     *
     * @return string|null
     */
    public function getAntiFakeCode()
    {
        return $this->container['antiFakeCode'];
    }

    /**
     * Sets antiFakeCode
     *
     * @param string|null $antiFakeCode 发票防伪码/密码
     *
     * @return self
     */
    public function setAntiFakeCode($antiFakeCode)
    {
        $this->container['antiFakeCode'] = $antiFakeCode;

        return $this;
    }

    /**
     * Gets applyId
     *
     * @return string|null
     */
    public function getApplyId()
    {
        return $this->container['applyId'];
    }

    /**
     * Sets applyId
     *
     * @param string|null $applyId 发票申请ID, 由阿里发票平台生成。 拆单开票后一笔申请可能对应多张发票。 source=apply时必填，其他source可为空
     *
     * @return self
     */
    public function setApplyId($applyId)
    {
        $this->container['applyId'] = $applyId;

        return $this;
    }

    /**
     * Gets bizErrorCode
     *
     * @return string|null
     */
    public function getBizErrorCode()
    {
        return $this->container['bizErrorCode'];
    }

    /**
     * Sets bizErrorCode
     *
     * @param string|null $bizErrorCode 开票失败错误码， 开票失败(create_result=fail)时必填
     *
     * @return self
     */
    public function setBizErrorCode($bizErrorCode)
    {
        $this->container['bizErrorCode'] = $bizErrorCode;

        return $this;
    }

    /**
     * Gets bizErrorMsg
     *
     * @return string|null
     */
    public function getBizErrorMsg()
    {
        return $this->container['bizErrorMsg'];
    }

    /**
     * Sets bizErrorMsg
     *
     * @param string|null $bizErrorMsg 开票失败错误信息， 开票失败(create_result=fail)时必填
     *
     * @return self
     */
    public function setBizErrorMsg($bizErrorMsg)
    {
        $this->container['bizErrorMsg'] = $bizErrorMsg;

        return $this;
    }

    /**
     * Gets businessType
     *
     * @return int|null
     */
    public function getBusinessType()
    {
        return $this->container['businessType'];
    }

    /**
     * Sets businessType
     *
     * @param int|null $businessType 抬头类型。可选值： 0：个人 1：企业
     *
     * @return self
     */
    public function setBusinessType($businessType)
    {
        $this->container['businessType'] = $businessType;

        return $this;
    }

    /**
     * Gets checkCode
     *
     * @return string|null
     */
    public function getCheckCode()
    {
        return $this->container['checkCode'];
    }

    /**
     * Sets checkCode
     *
     * @param string|null $checkCode 校验码
     *
     * @return self
     */
    public function setCheckCode($checkCode)
    {
        $this->container['checkCode'] = $checkCode;

        return $this;
    }

    /**
     * Gets createResult
     *
     * @return string|null
     */
    public function getCreateResult()
    {
        return $this->container['createResult'];
    }

    /**
     * Sets createResult
     *
     * @param string|null $createResult 开票结果，枚举值： success: 发票开具成功； fail: 开票失败； source=async时必填，传实际的开票结果。其他source可不传，默认为success
     *
     * @return self
     */
    public function setCreateResult($createResult)
    {
        $this->container['createResult'] = $createResult;

        return $this;
    }

    /**
     * Gets deviceNo
     *
     * @return string|null
     */
    public function getDeviceNo()
    {
        return $this->container['deviceNo'];
    }

    /**
     * Sets deviceNo
     *
     * @param string|null $deviceNo 开票分机号/机器编号
     *
     * @return self
     */
    public function setDeviceNo($deviceNo)
    {
        $this->container['deviceNo'] = $deviceNo;

        return $this;
    }

    /**
     * Gets invoiceAmount
     *
     * @return string|null
     */
    public function getInvoiceAmount()
    {
        return $this->container['invoiceAmount'];
    }

    /**
     * Sets invoiceAmount
     *
     * @param string|null $invoiceAmount 合计含税金额（开票金额），格式为2位小数。 当开红票时，该字段为负数。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setInvoiceAmount($invoiceAmount)
    {
        $this->container['invoiceAmount'] = $invoiceAmount;

        return $this;
    }

    /**
     * Gets invoiceCode
     *
     * @return string|null
     */
    public function getInvoiceCode()
    {
        return $this->container['invoiceCode'];
    }

    /**
     * Sets invoiceCode
     *
     * @param string|null $invoiceCode 发票代码。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setInvoiceCode($invoiceCode)
    {
        $this->container['invoiceCode'] = $invoiceCode;

        return $this;
    }

    /**
     * Gets invoiceDate
     *
     * @return string|null
     */
    public function getInvoiceDate()
    {
        return $this->container['invoiceDate'];
    }

    /**
     * Sets invoiceDate
     *
     * @param string|null $invoiceDate 开票日期，格式 yyyy-MM-dd. 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setInvoiceDate($invoiceDate)
    {
        $this->container['invoiceDate'] = $invoiceDate;

        return $this;
    }

    /**
     * Gets invoiceFileContent
     *
     * @return string|null
     */
    public function getInvoiceFileContent()
    {
        return $this->container['invoiceFileContent'];
    }

    /**
     * Sets invoiceFileContent
     *
     * @param string|null $invoiceFileContent 发票版式文件数据，base64化的字符串； 电子发票必填
     *
     * @return self
     */
    public function setInvoiceFileContent($invoiceFileContent)
    {
        $this->container['invoiceFileContent'] = $invoiceFileContent;

        return $this;
    }

    /**
     * Gets invoiceFileType
     *
     * @return string|null
     */
    public function getInvoiceFileType()
    {
        return $this->container['invoiceFileType'];
    }

    /**
     * Sets invoiceFileType
     *
     * @param string|null $invoiceFileType 发票板式文件类型。可选值： PDF, OFD。 开电票且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setInvoiceFileType($invoiceFileType)
    {
        $this->container['invoiceFileType'] = $invoiceFileType;

        return $this;
    }

    /**
     * Gets invoiceItems
     *
     * @return \Alipay\OpenAPISDK\Model\InvoiceItem|null
     */
    public function getInvoiceItems()
    {
        return $this->container['invoiceItems'];
    }

    /**
     * Sets invoiceItems
     *
     * @param \Alipay\OpenAPISDK\Model\InvoiceItem|null $invoiceItems invoiceItems
     *
     * @return self
     */
    public function setInvoiceItems($invoiceItems)
    {
        $this->container['invoiceItems'] = $invoiceItems;

        return $this;
    }

    /**
     * Gets invoiceKind
     *
     * @return int|null
     */
    public function getInvoiceKind()
    {
        return $this->container['invoiceKind'];
    }

    /**
     * Sets invoiceKind
     *
     * @param int|null $invoiceKind 开票发票类型 可选值： 0: 电票； 1：纸质普票； 2：纸质专票； 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setInvoiceKind($invoiceKind)
    {
        $this->container['invoiceKind'] = $invoiceKind;

        return $this;
    }

    /**
     * Gets invoiceMemo
     *
     * @return string|null
     */
    public function getInvoiceMemo()
    {
        return $this->container['invoiceMemo'];
    }

    /**
     * Sets invoiceMemo
     *
     * @param string|null $invoiceMemo 发票备注，会显示在票面
     *
     * @return self
     */
    public function setInvoiceMemo($invoiceMemo)
    {
        $this->container['invoiceMemo'] = $invoiceMemo;

        return $this;
    }

    /**
     * Gets invoiceNo
     *
     * @return string|null
     */
    public function getInvoiceNo()
    {
        return $this->container['invoiceNo'];
    }

    /**
     * Sets invoiceNo
     *
     * @param string|null $invoiceNo 发票号码。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setInvoiceNo($invoiceNo)
    {
        $this->container['invoiceNo'] = $invoiceNo;

        return $this;
    }

    /**
     * Gets invoiceType
     *
     * @return string|null
     */
    public function getInvoiceType()
    {
        return $this->container['invoiceType'];
    }

    /**
     * Sets invoiceType
     *
     * @param string|null $invoiceType 发票(开票)类型，可选值： blue: 蓝票； red: 红票； 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setInvoiceType($invoiceType)
    {
        $this->container['invoiceType'] = $invoiceType;

        return $this;
    }

    /**
     * Gets levyType
     *
     * @return string|null
     */
    public function getLevyType()
    {
        return $this->container['levyType'];
    }

    /**
     * Sets levyType
     *
     * @param string|null $levyType 征税方式，0普通征收，1减按征收，2差额征收
     *
     * @return self
     */
    public function setLevyType($levyType)
    {
        $this->container['levyType'] = $levyType;

        return $this;
    }

    /**
     * Gets normalInvoiceCode
     *
     * @return string|null
     */
    public function getNormalInvoiceCode()
    {
        return $this->container['normalInvoiceCode'];
    }

    /**
     * Sets normalInvoiceCode
     *
     * @param string|null $normalInvoiceCode 原发票代码。 冲红且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setNormalInvoiceCode($normalInvoiceCode)
    {
        $this->container['normalInvoiceCode'] = $normalInvoiceCode;

        return $this;
    }

    /**
     * Gets normalInvoiceNo
     *
     * @return string|null
     */
    public function getNormalInvoiceNo()
    {
        return $this->container['normalInvoiceNo'];
    }

    /**
     * Sets normalInvoiceNo
     *
     * @param string|null $normalInvoiceNo 原发票号码。 冲红且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setNormalInvoiceNo($normalInvoiceNo)
    {
        $this->container['normalInvoiceNo'] = $normalInvoiceNo;

        return $this;
    }

    /**
     * Gets payeeAddress
     *
     * @return string|null
     */
    public function getPayeeAddress()
    {
        return $this->container['payeeAddress'];
    }

    /**
     * Sets payeeAddress
     *
     * @param string|null $payeeAddress 销方地址。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayeeAddress($payeeAddress)
    {
        $this->container['payeeAddress'] = $payeeAddress;

        return $this;
    }

    /**
     * Gets payeeBankAccountId
     *
     * @return string|null
     */
    public function getPayeeBankAccountId()
    {
        return $this->container['payeeBankAccountId'];
    }

    /**
     * Sets payeeBankAccountId
     *
     * @param string|null $payeeBankAccountId 销方银行账号
     *
     * @return self
     */
    public function setPayeeBankAccountId($payeeBankAccountId)
    {
        $this->container['payeeBankAccountId'] = $payeeBankAccountId;

        return $this;
    }

    /**
     * Gets payeeBankName
     *
     * @return string|null
     */
    public function getPayeeBankName()
    {
        return $this->container['payeeBankName'];
    }

    /**
     * Sets payeeBankName
     *
     * @param string|null $payeeBankName 销方开户行名称
     *
     * @return self
     */
    public function setPayeeBankName($payeeBankName)
    {
        $this->container['payeeBankName'] = $payeeBankName;

        return $this;
    }

    /**
     * Gets payeeChecker
     *
     * @return string|null
     */
    public function getPayeeChecker()
    {
        return $this->container['payeeChecker'];
    }

    /**
     * Sets payeeChecker
     *
     * @param string|null $payeeChecker 复核人
     *
     * @return self
     */
    public function setPayeeChecker($payeeChecker)
    {
        $this->container['payeeChecker'] = $payeeChecker;

        return $this;
    }

    /**
     * Gets payeeName
     *
     * @return string|null
     */
    public function getPayeeName()
    {
        return $this->container['payeeName'];
    }

    /**
     * Sets payeeName
     *
     * @param string|null $payeeName 销方名称。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayeeName($payeeName)
    {
        $this->container['payeeName'] = $payeeName;

        return $this;
    }

    /**
     * Gets payeeOperator
     *
     * @return string|null
     */
    public function getPayeeOperator()
    {
        return $this->container['payeeOperator'];
    }

    /**
     * Sets payeeOperator
     *
     * @param string|null $payeeOperator 开票人。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayeeOperator($payeeOperator)
    {
        $this->container['payeeOperator'] = $payeeOperator;

        return $this;
    }

    /**
     * Gets payeePhone
     *
     * @return string|null
     */
    public function getPayeePhone()
    {
        return $this->container['payeePhone'];
    }

    /**
     * Sets payeePhone
     *
     * @param string|null $payeePhone 销方联系电话。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayeePhone($payeePhone)
    {
        $this->container['payeePhone'] = $payeePhone;

        return $this;
    }

    /**
     * Gets payeeReceiver
     *
     * @return string|null
     */
    public function getPayeeReceiver()
    {
        return $this->container['payeeReceiver'];
    }

    /**
     * Sets payeeReceiver
     *
     * @param string|null $payeeReceiver 收款人
     *
     * @return self
     */
    public function setPayeeReceiver($payeeReceiver)
    {
        $this->container['payeeReceiver'] = $payeeReceiver;

        return $this;
    }

    /**
     * Gets payeeRegisterNo
     *
     * @return string|null
     */
    public function getPayeeRegisterNo()
    {
        return $this->container['payeeRegisterNo'];
    }

    /**
     * Sets payeeRegisterNo
     *
     * @param string|null $payeeRegisterNo 销方税务登记证号。由大写字母或数字组成，长度要求15~20位。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayeeRegisterNo($payeeRegisterNo)
    {
        $this->container['payeeRegisterNo'] = $payeeRegisterNo;

        return $this;
    }

    /**
     * Gets payerAddress
     *
     * @return string|null
     */
    public function getPayerAddress()
    {
        return $this->container['payerAddress'];
    }

    /**
     * Sets payerAddress
     *
     * @param string|null $payerAddress 购方地址， 专票且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayerAddress($payerAddress)
    {
        $this->container['payerAddress'] = $payerAddress;

        return $this;
    }

    /**
     * Gets payerBankAccountId
     *
     * @return string|null
     */
    public function getPayerBankAccountId()
    {
        return $this->container['payerBankAccountId'];
    }

    /**
     * Sets payerBankAccountId
     *
     * @param string|null $payerBankAccountId 购方银行账号， 专票且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayerBankAccountId($payerBankAccountId)
    {
        $this->container['payerBankAccountId'] = $payerBankAccountId;

        return $this;
    }

    /**
     * Gets payerBankName
     *
     * @return string|null
     */
    public function getPayerBankName()
    {
        return $this->container['payerBankName'];
    }

    /**
     * Sets payerBankName
     *
     * @param string|null $payerBankName 购方开户行名称， 专票且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayerBankName($payerBankName)
    {
        $this->container['payerBankName'] = $payerBankName;

        return $this;
    }

    /**
     * Gets payerEmail
     *
     * @return string|null
     */
    public function getPayerEmail()
    {
        return $this->container['payerEmail'];
    }

    /**
     * Sets payerEmail
     *
     * @param string|null $payerEmail 购方电子邮箱，需满足邮箱格式。 格式要求：\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\\\.\\\\w+([-.]\\\\w+)*
     *
     * @return self
     */
    public function setPayerEmail($payerEmail)
    {
        $this->container['payerEmail'] = $payerEmail;

        return $this;
    }

    /**
     * Gets payerName
     *
     * @return string|null
     */
    public function getPayerName()
    {
        return $this->container['payerName'];
    }

    /**
     * Sets payerName
     *
     * @param string|null $payerName 购方抬头。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayerName($payerName)
    {
        $this->container['payerName'] = $payerName;

        return $this;
    }

    /**
     * Gets payerPhone
     *
     * @return string|null
     */
    public function getPayerPhone()
    {
        return $this->container['payerPhone'];
    }

    /**
     * Sets payerPhone
     *
     * @param string|null $payerPhone 购方联系电话， 专票且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayerPhone($payerPhone)
    {
        $this->container['payerPhone'] = $payerPhone;

        return $this;
    }

    /**
     * Gets payerRegisterNo
     *
     * @return string|null
     */
    public function getPayerRegisterNo()
    {
        return $this->container['payerRegisterNo'];
    }

    /**
     * Sets payerRegisterNo
     *
     * @param string|null $payerRegisterNo 购方税务登记证号，由大写字母或数字组成，长度要求15~20位。 开企业抬头时必填， 专票且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setPayerRegisterNo($payerRegisterNo)
    {
        $this->container['payerRegisterNo'] = $payerRegisterNo;

        return $this;
    }

    /**
     * Gets platformCode
     *
     * @return string|null
     */
    public function getPlatformCode()
    {
        return $this->container['platformCode'];
    }

    /**
     * Sets platformCode
     *
     * @param string|null $platformCode 业务平台Code, 由发票中台分配。 用于标识需交付发票的业务平台，source=upload时必填，其他source可为空
     *
     * @return self
     */
    public function setPlatformCode($platformCode)
    {
        $this->container['platformCode'] = $platformCode;

        return $this;
    }

    /**
     * Gets platformTid
     *
     * @return string|null
     */
    public function getPlatformTid()
    {
        return $this->container['platformTid'];
    }

    /**
     * Sets platformTid
     *
     * @param string|null $platformTid 业务平台发票申请对应的订单号。 用于区分业务平台订单号，source=upload时必填，其他source可为空
     *
     * @return self
     */
    public function setPlatformTid($platformTid)
    {
        $this->container['platformTid'] = $platformTid;

        return $this;
    }

    /**
     * Gets platformUserId
     *
     * @return string|null
     */
    public function getPlatformUserId()
    {
        return $this->container['platformUserId'];
    }

    /**
     * Sets platformUserId
     *
     * @param string|null $platformUserId 业务平台发票申请对应的订单号。 用于区分业务平台订单号，source=upload时必填，其他source可为空
     *
     * @return self
     */
    public function setPlatformUserId($platformUserId)
    {
        $this->container['platformUserId'] = $platformUserId;

        return $this;
    }

    /**
     * Gets qrCode
     *
     * @return string|null
     */
    public function getQrCode()
    {
        return $this->container['qrCode'];
    }

    /**
     * Sets qrCode
     *
     * @param string|null $qrCode 二维码
     *
     * @return self
     */
    public function setQrCode($qrCode)
    {
        $this->container['qrCode'] = $qrCode;

        return $this;
    }

    /**
     * Gets receiveMobile
     *
     * @return string|null
     */
    public function getReceiveMobile()
    {
        return $this->container['receiveMobile'];
    }

    /**
     * Sets receiveMobile
     *
     * @param string|null $receiveMobile 购方手机号码，用于收票
     *
     * @return self
     */
    public function setReceiveMobile($receiveMobile)
    {
        $this->container['receiveMobile'] = $receiveMobile;

        return $this;
    }

    /**
     * Gets redNoticeNo
     *
     * @return string|null
     */
    public function getRedNoticeNo()
    {
        return $this->container['redNoticeNo'];
    }

    /**
     * Sets redNoticeNo
     *
     * @param string|null $redNoticeNo 红字通知单号； 专票冲红且开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setRedNoticeNo($redNoticeNo)
    {
        $this->container['redNoticeNo'] = $redNoticeNo;

        return $this;
    }

    /**
     * Gets serialNo
     *
     * @return string|null
     */
    public function getSerialNo()
    {
        return $this->container['serialNo'];
    }

    /**
     * Sets serialNo
     *
     * @param string|null $serialNo 开票流水号/序列号，唯一标志一笔开票请求，由于阿里发票中台生成。 source=async时必填，其他source可为空
     *
     * @return self
     */
    public function setSerialNo($serialNo)
    {
        $this->container['serialNo'] = $serialNo;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string|null
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string|null $source 发票来源，可选值： apply: 间连开票模式，ISV回传商家基于申请开具的发票； async：直连开票模式，ISV回传开票结果； upload：直接回传，进行归集与交付的发票
     *
     * @return self
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets specialFlag
     *
     * @return string|null
     */
    public function getSpecialFlag()
    {
        return $this->container['specialFlag'];
    }

    /**
     * Sets specialFlag
     *
     * @param string|null $specialFlag 特殊票种标识，可选值： “00”非特殊票种 （默认值） “02”农产品收购 “06”抵扣通行费 “07”其它通行费 “08”成品油销售 “18”成品油专票负数发票
     *
     * @return self
     */
    public function setSpecialFlag($specialFlag)
    {
        $this->container['specialFlag'] = $specialFlag;

        return $this;
    }

    /**
     * Gets sumPrice
     *
     * @return string|null
     */
    public function getSumPrice()
    {
        return $this->container['sumPrice'];
    }

    /**
     * Sets sumPrice
     *
     * @param string|null $sumPrice 合计金额（不含税），格式为2位小数。 当开红票时，该字段为负数。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setSumPrice($sumPrice)
    {
        $this->container['sumPrice'] = $sumPrice;

        return $this;
    }

    /**
     * Gets sumTax
     *
     * @return string|null
     */
    public function getSumTax()
    {
        return $this->container['sumTax'];
    }

    /**
     * Sets sumTax
     *
     * @param string|null $sumTax 合计税额，格式为2位小数。 当开红票时，该字段为0或负数。 开票成功时(create_result=success)必填
     *
     * @return self
     */
    public function setSumTax($sumTax)
    {
        $this->container['sumTax'] = $sumTax;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


