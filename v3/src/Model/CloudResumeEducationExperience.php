<?php
/**
 * CloudResumeEducationExperience
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * CloudResumeEducationExperience Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class CloudResumeEducationExperience implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CloudResumeEducationExperience';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'degree' => 'string',
        'educationStatus' => 'string',
        'finishSchoolMonth' => 'string',
        'finishSchoolYear' => 'int',
        'inSchoolMonth' => 'int',
        'inSchoolYear' => 'int',
        'location' => 'string',
        'major' => 'string',
        'month' => 'int',
        'schoolName' => 'string',
        'tongZhao' => 'bool',
        'year' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'degree' => null,
        'educationStatus' => null,
        'finishSchoolMonth' => null,
        'finishSchoolYear' => null,
        'inSchoolMonth' => null,
        'inSchoolYear' => null,
        'location' => null,
        'major' => null,
        'month' => null,
        'schoolName' => null,
        'tongZhao' => null,
        'year' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'degree' => 'degree',
        'educationStatus' => 'education_status',
        'finishSchoolMonth' => 'finish_school_month',
        'finishSchoolYear' => 'finish_school_year',
        'inSchoolMonth' => 'in_school_month',
        'inSchoolYear' => 'in_school_year',
        'location' => 'location',
        'major' => 'major',
        'month' => 'month',
        'schoolName' => 'school_name',
        'tongZhao' => 'tong_zhao',
        'year' => 'year'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'degree' => 'setDegree',
        'educationStatus' => 'setEducationStatus',
        'finishSchoolMonth' => 'setFinishSchoolMonth',
        'finishSchoolYear' => 'setFinishSchoolYear',
        'inSchoolMonth' => 'setInSchoolMonth',
        'inSchoolYear' => 'setInSchoolYear',
        'location' => 'setLocation',
        'major' => 'setMajor',
        'month' => 'setMonth',
        'schoolName' => 'setSchoolName',
        'tongZhao' => 'setTongZhao',
        'year' => 'setYear'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'degree' => 'getDegree',
        'educationStatus' => 'getEducationStatus',
        'finishSchoolMonth' => 'getFinishSchoolMonth',
        'finishSchoolYear' => 'getFinishSchoolYear',
        'inSchoolMonth' => 'getInSchoolMonth',
        'inSchoolYear' => 'getInSchoolYear',
        'location' => 'getLocation',
        'major' => 'getMajor',
        'month' => 'getMonth',
        'schoolName' => 'getSchoolName',
        'tongZhao' => 'getTongZhao',
        'year' => 'getYear'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['degree'] = $data['degree'] ?? null;
        $this->container['educationStatus'] = $data['educationStatus'] ?? null;
        $this->container['finishSchoolMonth'] = $data['finishSchoolMonth'] ?? null;
        $this->container['finishSchoolYear'] = $data['finishSchoolYear'] ?? null;
        $this->container['inSchoolMonth'] = $data['inSchoolMonth'] ?? null;
        $this->container['inSchoolYear'] = $data['inSchoolYear'] ?? null;
        $this->container['location'] = $data['location'] ?? null;
        $this->container['major'] = $data['major'] ?? null;
        $this->container['month'] = $data['month'] ?? null;
        $this->container['schoolName'] = $data['schoolName'] ?? null;
        $this->container['tongZhao'] = $data['tongZhao'] ?? null;
        $this->container['year'] = $data['year'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets degree
     *
     * @return string|null
     */
    public function getDegree()
    {
        return $this->container['degree'];
    }

    /**
     * Sets degree
     *
     * @param string|null $degree 学历
     *
     * @return self
     */
    public function setDegree($degree)
    {
        $this->container['degree'] = $degree;

        return $this;
    }

    /**
     * Gets educationStatus
     *
     * @return string|null
     */
    public function getEducationStatus()
    {
        return $this->container['educationStatus'];
    }

    /**
     * Sets educationStatus
     *
     * @param string|null $educationStatus 教育状态
     *
     * @return self
     */
    public function setEducationStatus($educationStatus)
    {
        $this->container['educationStatus'] = $educationStatus;

        return $this;
    }

    /**
     * Gets finishSchoolMonth
     *
     * @return string|null
     */
    public function getFinishSchoolMonth()
    {
        return $this->container['finishSchoolMonth'];
    }

    /**
     * Sets finishSchoolMonth
     *
     * @param string|null $finishSchoolMonth 毕业月份
     *
     * @return self
     */
    public function setFinishSchoolMonth($finishSchoolMonth)
    {
        $this->container['finishSchoolMonth'] = $finishSchoolMonth;

        return $this;
    }

    /**
     * Gets finishSchoolYear
     *
     * @return int|null
     */
    public function getFinishSchoolYear()
    {
        return $this->container['finishSchoolYear'];
    }

    /**
     * Sets finishSchoolYear
     *
     * @param int|null $finishSchoolYear 毕业年份
     *
     * @return self
     */
    public function setFinishSchoolYear($finishSchoolYear)
    {
        $this->container['finishSchoolYear'] = $finishSchoolYear;

        return $this;
    }

    /**
     * Gets inSchoolMonth
     *
     * @return int|null
     */
    public function getInSchoolMonth()
    {
        return $this->container['inSchoolMonth'];
    }

    /**
     * Sets inSchoolMonth
     *
     * @param int|null $inSchoolMonth 入学月份
     *
     * @return self
     */
    public function setInSchoolMonth($inSchoolMonth)
    {
        $this->container['inSchoolMonth'] = $inSchoolMonth;

        return $this;
    }

    /**
     * Gets inSchoolYear
     *
     * @return int|null
     */
    public function getInSchoolYear()
    {
        return $this->container['inSchoolYear'];
    }

    /**
     * Sets inSchoolYear
     *
     * @param int|null $inSchoolYear 入学年份
     *
     * @return self
     */
    public function setInSchoolYear($inSchoolYear)
    {
        $this->container['inSchoolYear'] = $inSchoolYear;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string|null
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string|null $location 受教育地点
     *
     * @return self
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets major
     *
     * @return string|null
     */
    public function getMajor()
    {
        return $this->container['major'];
    }

    /**
     * Sets major
     *
     * @param string|null $major 上学专业
     *
     * @return self
     */
    public function setMajor($major)
    {
        $this->container['major'] = $major;

        return $this;
    }

    /**
     * Gets month
     *
     * @return int|null
     */
    public function getMonth()
    {
        return $this->container['month'];
    }

    /**
     * Sets month
     *
     * @param int|null $month 月
     *
     * @return self
     */
    public function setMonth($month)
    {
        $this->container['month'] = $month;

        return $this;
    }

    /**
     * Gets schoolName
     *
     * @return string|null
     */
    public function getSchoolName()
    {
        return $this->container['schoolName'];
    }

    /**
     * Sets schoolName
     *
     * @param string|null $schoolName 学校名称
     *
     * @return self
     */
    public function setSchoolName($schoolName)
    {
        $this->container['schoolName'] = $schoolName;

        return $this;
    }

    /**
     * Gets tongZhao
     *
     * @return bool|null
     */
    public function getTongZhao()
    {
        return $this->container['tongZhao'];
    }

    /**
     * Sets tongZhao
     *
     * @param bool|null $tongZhao 是否统招
     *
     * @return self
     */
    public function setTongZhao($tongZhao)
    {
        $this->container['tongZhao'] = $tongZhao;

        return $this;
    }

    /**
     * Gets year
     *
     * @return int|null
     */
    public function getYear()
    {
        return $this->container['year'];
    }

    /**
     * Sets year
     *
     * @param int|null $year 年
     *
     * @return self
     */
    public function setYear($year)
    {
        $this->container['year'] = $year;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


