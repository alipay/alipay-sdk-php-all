<?php
/**
 * CommonErrorType
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * CommonErrorType Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class CommonErrorType implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CommonErrorType';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'code' => 'string',
        'links' => 'string',
        'message' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'code' => null,
        'links' => null,
        'message' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'links' => 'links',
        'message' => 'message'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'links' => 'setLinks',
        'message' => 'setMessage'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'links' => 'getLinks',
        'message' => 'getMessage'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const CODE_INVALID_PARAMETER = 'invalid-parameter';
    public const CODE_UPLOAD_FAIL = 'upload-fail';
    public const CODE_INVALID_FILE_EXTENSION = 'invalid-file-extension';
    public const CODE_INVALID_FILE_SIZE = 'invalid-file-size';
    public const CODE_FILE_CHECK_FAIL = 'file-check-fail';
    public const CODE_APP_CALL_LIMITED = 'app-call-limited';
    public const CODE_METHOD_CALL_LIMITED = 'method-call-limited';
    public const CODE_INSUFFICIENT_ISV_PERMISSIONS = 'insufficient-isv-permissions';
    public const CODE_ILLEGAL_CLIENT_IP = 'illegal-client-ip';
    public const CODE_INSUFFICIENT_USER_PERMISSIONS = 'insufficient-user-permissions';
    public const CODE_SELF_INVOKE_FORBIDDEN = 'self-invoke-forbidden';
    public const CODE_APP_AUTH_INVOKE_LIMIT = 'app-auth-invoke-limit';
    public const CODE_APP_API_PUNISHED = 'app-api-punished';
    public const CODE_MISSING_METHOD = 'missing-method';
    public const CODE_MISSING_PLATFORM = 'missing-platform';
    public const CODE_INVALID_PLATFORM = 'invalid-platform';
    public const CODE_INVALID_METHOD = 'invalid-method';
    public const CODE_FORBIDDEN_API = 'forbidden-api';
    public const CODE_INVALID_FORMAT = 'invalid-format';
    public const CODE_MISSING_SIGNATURE = 'missing-signature';
    public const CODE_MISSING_APP_ACCESS_TOKEN = 'missing-app-access-token';
    public const CODE_MISSING_SIGNATURE_TYPE = 'missing-signature-type';
    public const CODE_MISSING_DEFAULT_SIGNATURE_TYPE = 'missing-default-signature-type';
    public const CODE_MISSING_SIGNATURE_KEY = 'missing-signature-key';
    public const CODE_INVALID_SIGNATURE_TYPE = 'invalid-signature-type';
    public const CODE_INVALID_SIGNATURE_TYPE_SAID_INTERFACE = 'invalid-signature-type-said-interface';
    public const CODE_INVALID_SIGNATURE = 'invalid-signature';
    public const CODE_UNSUPPORTED_EXPIRED_APP_KEY_SIGN = 'unsupported-expired-app-key-sign';
    public const CODE_APP_KEY_SECURITY_RISK_APP_CERT_EXPIRED = 'app-key-security-risk, app-cert-expired';
    public const CODE_APP_CERT_NOT_EXIST = 'app-cert-not-exist';
    public const CODE_ALIPAY_CERT_NOT_EXIST = 'alipay-cert-not-exist';
    public const CODE_MISSING_APP_CERT_SN = 'missing-app-cert-sn';
    public const CODE_MISSING_ALIPAY_CERT_SN = 'missing-alipay-cert-sn';
    public const CODE_MISSING_ALIPAY_ROOT_CERT_SN = 'missing-alipay-root-cert-sn';
    public const CODE_INVALID_ALIPAY_ROOT_CERT_SN = 'invalid-alipay-root-cert-sn';
    public const CODE_INVALID_REQUEST_DATA = 'invalid-request-data';
    public const CODE_INVALID_RESPONSE_DATA = 'invalid-response-data';
    public const CODE_MISSING_ENCRYPT_TYPE = 'missing-encrypt-type';
    public const CODE_MISSING_ENCRYPT_KEY = 'missing-encrypt-key';
    public const CODE_INVALID_ENCRYPT_TYPE = 'invalid-encrypt-type';
    public const CODE_INVALID_ENCRYPT = 'invalid-encrypt';
    public const CODE_MISSING_SESSION = 'missing-session';
    public const CODE_MISSING_APP_ID = 'missing-app-id';
    public const CODE_INVALID_APP_ID = 'invalid-app-id';
    public const CODE_MISSING_TIMESTAMP = 'missing-timestamp';
    public const CODE_INVALID_TIMESTAMP = 'invalid-timestamp';
    public const CODE_ILLEGAL_TIMESTAMP = 'illegal-timestamp';
    public const CODE_MISSING_VERSION = 'missing-version';
    public const CODE_INVALID_VERSION = 'invalid-version';
    public const CODE_UNSUPPORTED_VERSION = 'unsupported-version';
    public const CODE_INVALID_ENCODING = 'invalid-encoding';
    public const CODE_INVALID_CHARSET = 'invalid-charset';
    public const CODE_INVALID_DIGEST_TYPE = 'invalid-digest-type';
    public const CODE_INVALID_DIGEST = 'invalid-digest';
    public const CODE_INVALID_APP_STATE = 'invalid-app-state';
    public const CODE_INVALID_SUBSCRIBE_RELATIONS = 'invalid-subscribe-relations';
    public const CODE_INVALID_AUTH_TOKEN = 'invalid-auth-token';
    public const CODE_AUTH_TOKEN_TIME_OUT = 'auth-token-time-out';
    public const CODE_INVALID_APP_AUTH_TOKEN = 'invalid-app-auth-token';
    public const CODE_INVALID_APP_AUTH_TOKEN_NO_API = 'invalid-app-auth-token-no-api';
    public const CODE_APP_AUTH_TOKEN_TIME_OUT = 'app-auth-token-time-out';
    public const CODE_NOT_SUPPORT_APP_AUTH = 'not-support-app-auth';
    public const CODE_ACCESS_DATA_TIME_OUT = 'access-data-time-out';
    public const CODE_UNSUPPORT_OPERATION = 'unsupport-operation';
    public const CODE_OPENID_ERROR = 'openid-error';
    public const CODE_UNKNOW_ERROR = 'unknow-error';
    public const CODE_INVALID_APP_METHOD = 'invalid-app-method';
    public const CODE_MISSING_APP_UID = 'missing-app-uid';
    public const CODE_ILLEGAL_JSON = 'illegal-json';
    public const CODE_ILLEGAL_CARD_NO = 'illegal-card-no';
    public const CODE_INVALID_PARTNERID = 'invalid-partnerid';
    public const CODE_NO_PRODUCT_REG_BY_PARTNER = 'no-product-reg-by-partner';
    public const CODE_DECRYPTION_ERROR = 'decryption-error';
    public const CODE_DECRYPTION_ERROR_MISSING_ENCRYPT_TYPE = 'decryption-error-missing-encrypt-type';
    public const CODE_DECRYPTION_ERROR_NOT_VALID_ENCRYPT_TYPE = 'decryption-error-not-valid-encrypt-type';
    public const CODE_DECRYPTION_ERROR_NOT_VALID_ENCRYPT_KEY = 'decryption-error-not-valid-encrypt-key';
    public const CODE_DECRYPTION_ERROR_UNKNOWN = 'decryption-error-unknown';
    public const CODE_MISSING_SIGNATURE_CONFIG = 'missing-signature-config';
    public const CODE_SEVICE_NOT_BEEN_SUBSCRIBED_TO = 'sevice-not-been-subscribed-to';
    public const CODE_UNKNOWN_SUB_CODE = 'unknown-sub-code';
    public const CODE_SUSPECTED_ATTACK = 'suspected-attack';
    public const CODE_INVALID_AUTH_RELATIONS = 'invalid-auth-relations';
    public const CODE_INVALID_PRODUCT = 'invalid-product';
    public const CODE_METHOD_FORBIDDEN_BATCH_INVOKE = 'method-forbidden-batch-invoke';
    public const CODE_EXIST_BLANK_SUB_REQUEST_ID = 'exist-blank-sub-request-id';
    public const CODE_EXIST_REPEATED_SUB_REQUEST_ID = 'exist-repeated-sub-request-id';
    public const CODE_INVALID_APP_AUTH_RELATIONS = 'invalid-app-auth-relations';
    public const CODE_APP_UNBIND_PARTNER = 'app-unbind-partner';
    public const CODE_APP_INVALID_OID = 'app-invalid-oid';
    public const CODE_EXCEED_API_BALANCE = 'exceed-api-balance';
    public const CODE_INNER_APP_NO_ACCESS = 'inner-app-no-access';
    public const CODE_INVALID_INNER_INVOKE_SCENE = 'invalid-inner-invoke-scene';
    public const CODE_INVALID_APP_API_FIELD_CONFIG = 'invalid-app-api-field-config';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCodeAllowableValues()
    {
        return [
            self::CODE_INVALID_PARAMETER,
            self::CODE_UPLOAD_FAIL,
            self::CODE_INVALID_FILE_EXTENSION,
            self::CODE_INVALID_FILE_SIZE,
            self::CODE_FILE_CHECK_FAIL,
            self::CODE_APP_CALL_LIMITED,
            self::CODE_METHOD_CALL_LIMITED,
            self::CODE_INSUFFICIENT_ISV_PERMISSIONS,
            self::CODE_ILLEGAL_CLIENT_IP,
            self::CODE_INSUFFICIENT_USER_PERMISSIONS,
            self::CODE_SELF_INVOKE_FORBIDDEN,
            self::CODE_APP_AUTH_INVOKE_LIMIT,
            self::CODE_APP_API_PUNISHED,
            self::CODE_MISSING_METHOD,
            self::CODE_MISSING_PLATFORM,
            self::CODE_INVALID_PLATFORM,
            self::CODE_INVALID_METHOD,
            self::CODE_FORBIDDEN_API,
            self::CODE_INVALID_FORMAT,
            self::CODE_MISSING_SIGNATURE,
            self::CODE_MISSING_APP_ACCESS_TOKEN,
            self::CODE_MISSING_SIGNATURE_TYPE,
            self::CODE_MISSING_DEFAULT_SIGNATURE_TYPE,
            self::CODE_MISSING_SIGNATURE_KEY,
            self::CODE_INVALID_SIGNATURE_TYPE,
            self::CODE_INVALID_SIGNATURE_TYPE_SAID_INTERFACE,
            self::CODE_INVALID_SIGNATURE,
            self::CODE_UNSUPPORTED_EXPIRED_APP_KEY_SIGN,
            self::CODE_APP_KEY_SECURITY_RISK_APP_CERT_EXPIRED,
            self::CODE_APP_CERT_NOT_EXIST,
            self::CODE_ALIPAY_CERT_NOT_EXIST,
            self::CODE_MISSING_APP_CERT_SN,
            self::CODE_MISSING_ALIPAY_CERT_SN,
            self::CODE_MISSING_ALIPAY_ROOT_CERT_SN,
            self::CODE_INVALID_ALIPAY_ROOT_CERT_SN,
            self::CODE_INVALID_REQUEST_DATA,
            self::CODE_INVALID_RESPONSE_DATA,
            self::CODE_MISSING_ENCRYPT_TYPE,
            self::CODE_MISSING_ENCRYPT_KEY,
            self::CODE_INVALID_ENCRYPT_TYPE,
            self::CODE_INVALID_ENCRYPT,
            self::CODE_MISSING_SESSION,
            self::CODE_MISSING_APP_ID,
            self::CODE_INVALID_APP_ID,
            self::CODE_MISSING_TIMESTAMP,
            self::CODE_INVALID_TIMESTAMP,
            self::CODE_ILLEGAL_TIMESTAMP,
            self::CODE_MISSING_VERSION,
            self::CODE_INVALID_VERSION,
            self::CODE_UNSUPPORTED_VERSION,
            self::CODE_INVALID_ENCODING,
            self::CODE_INVALID_CHARSET,
            self::CODE_INVALID_DIGEST_TYPE,
            self::CODE_INVALID_DIGEST,
            self::CODE_INVALID_APP_STATE,
            self::CODE_INVALID_SUBSCRIBE_RELATIONS,
            self::CODE_INVALID_AUTH_TOKEN,
            self::CODE_AUTH_TOKEN_TIME_OUT,
            self::CODE_INVALID_APP_AUTH_TOKEN,
            self::CODE_INVALID_APP_AUTH_TOKEN_NO_API,
            self::CODE_APP_AUTH_TOKEN_TIME_OUT,
            self::CODE_NOT_SUPPORT_APP_AUTH,
            self::CODE_ACCESS_DATA_TIME_OUT,
            self::CODE_UNSUPPORT_OPERATION,
            self::CODE_OPENID_ERROR,
            self::CODE_UNKNOW_ERROR,
            self::CODE_INVALID_APP_METHOD,
            self::CODE_MISSING_APP_UID,
            self::CODE_ILLEGAL_JSON,
            self::CODE_ILLEGAL_CARD_NO,
            self::CODE_INVALID_PARTNERID,
            self::CODE_NO_PRODUCT_REG_BY_PARTNER,
            self::CODE_DECRYPTION_ERROR,
            self::CODE_DECRYPTION_ERROR_MISSING_ENCRYPT_TYPE,
            self::CODE_DECRYPTION_ERROR_NOT_VALID_ENCRYPT_TYPE,
            self::CODE_DECRYPTION_ERROR_NOT_VALID_ENCRYPT_KEY,
            self::CODE_DECRYPTION_ERROR_UNKNOWN,
            self::CODE_MISSING_SIGNATURE_CONFIG,
            self::CODE_SEVICE_NOT_BEEN_SUBSCRIBED_TO,
            self::CODE_UNKNOWN_SUB_CODE,
            self::CODE_SUSPECTED_ATTACK,
            self::CODE_INVALID_AUTH_RELATIONS,
            self::CODE_INVALID_PRODUCT,
            self::CODE_METHOD_FORBIDDEN_BATCH_INVOKE,
            self::CODE_EXIST_BLANK_SUB_REQUEST_ID,
            self::CODE_EXIST_REPEATED_SUB_REQUEST_ID,
            self::CODE_INVALID_APP_AUTH_RELATIONS,
            self::CODE_APP_UNBIND_PARTNER,
            self::CODE_APP_INVALID_OID,
            self::CODE_EXCEED_API_BALANCE,
            self::CODE_INNER_APP_NO_ACCESS,
            self::CODE_INVALID_INNER_INVOKE_SCENE,
            self::CODE_INVALID_APP_API_FIELD_CONFIG,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = $data['code'] ?? null;
        $this->container['links'] = $data['links'] ?? null;
        $this->container['message'] = $data['message'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        //if ($this->container['code'] === null) {
        //    $invalidProperties[] = "'code' can't be null";
        //}
        $allowedValues = $this->getCodeAllowableValues();
        if (!is_null($this->container['code']) && !in_array($this->container['code'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'code', must be one of '%s'",
                $this->container['code'],
                implode("', '", $allowedValues)
            );
        }

        //if ($this->container['message'] === null) {
        //    $invalidProperties[] = "'message' can't be null";
        //}
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code 错误码
     *
     * @return self
     */
    public function setCode($code)
    {
        $allowedValues = $this->getCodeAllowableValues();
        if (!is_null($code) && !in_array($code, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'code', must be one of '%s'",
                    $code,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets links
     *
     * @return string|null
     */
    public function getLinks()
    {
        return $this->container['links'];
    }

    /**
     * Sets links
     *
     * @param string|null $links 解决方案链接
     *
     * @return self
     */
    public function setLinks($links)
    {
        $this->container['links'] = $links;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string $message 错误描述
     *
     * @return self
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


