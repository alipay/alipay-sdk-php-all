<?php
/**
 * AuthFieldApply
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2025-02-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * AuthFieldApply Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class AuthFieldApply implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AuthFieldApply';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'apiName' => 'string',
        'customerAnswer' => 'string',
        'fieldName' => 'string',
        'memo' => 'string',
        'packageCode' => 'string',
        'qpsAnswer' => 'string',
        'sceneCode' => 'string',
        'tinyAppTemplateId' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'apiName' => null,
        'customerAnswer' => null,
        'fieldName' => null,
        'memo' => null,
        'packageCode' => null,
        'qpsAnswer' => null,
        'sceneCode' => null,
        'tinyAppTemplateId' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'apiName' => 'api_name',
        'customerAnswer' => 'customer_answer',
        'fieldName' => 'field_name',
        'memo' => 'memo',
        'packageCode' => 'package_code',
        'qpsAnswer' => 'qps_answer',
        'sceneCode' => 'scene_code',
        'tinyAppTemplateId' => 'tiny_app_template_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'apiName' => 'setApiName',
        'customerAnswer' => 'setCustomerAnswer',
        'fieldName' => 'setFieldName',
        'memo' => 'setMemo',
        'packageCode' => 'setPackageCode',
        'qpsAnswer' => 'setQpsAnswer',
        'sceneCode' => 'setSceneCode',
        'tinyAppTemplateId' => 'setTinyAppTemplateId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'apiName' => 'getApiName',
        'customerAnswer' => 'getCustomerAnswer',
        'fieldName' => 'getFieldName',
        'memo' => 'getMemo',
        'packageCode' => 'getPackageCode',
        'qpsAnswer' => 'getQpsAnswer',
        'sceneCode' => 'getSceneCode',
        'tinyAppTemplateId' => 'getTinyAppTemplateId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['apiName'] = $data['apiName'] ?? null;
        $this->container['customerAnswer'] = $data['customerAnswer'] ?? null;
        $this->container['fieldName'] = $data['fieldName'] ?? null;
        $this->container['memo'] = $data['memo'] ?? null;
        $this->container['packageCode'] = $data['packageCode'] ?? null;
        $this->container['qpsAnswer'] = $data['qpsAnswer'] ?? null;
        $this->container['sceneCode'] = $data['sceneCode'] ?? null;
        $this->container['tinyAppTemplateId'] = $data['tinyAppTemplateId'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets apiName
     *
     * @return string|null
     */
    public function getApiName()
    {
        return $this->container['apiName'];
    }

    /**
     * Sets apiName
     *
     * @param string|null $apiName 接口英文名称，通过alipay.open.app.api.query接口查询获得。
     *
     * @return self
     */
    public function setApiName($apiName)
    {
        $this->container['apiName'] = $apiName;

        return $this;
    }

    /**
     * Gets customerAnswer
     *
     * @return string|null
     */
    public function getCustomerAnswer()
    {
        return $this->container['customerAnswer'];
    }

    /**
     * Sets customerAnswer
     *
     * @param string|null $customerAnswer 贵公司是否有自己的客服渠道，能及时响应和处理舆情数量是多少？
     *
     * @return self
     */
    public function setCustomerAnswer($customerAnswer)
    {
        $this->container['customerAnswer'] = $customerAnswer;

        return $this;
    }

    /**
     * Gets fieldName
     *
     * @return string|null
     */
    public function getFieldName()
    {
        return $this->container['fieldName'];
    }

    /**
     * Sets fieldName
     *
     * @param string|null $fieldName 字段英文名称，通过alipay.open.app.api.query接口查询获得。
     *
     * @return self
     */
    public function setFieldName($fieldName)
    {
        $this->container['fieldName'] = $fieldName;

        return $this;
    }

    /**
     * Gets memo
     *
     * @return string|null
     */
    public function getMemo()
    {
        return $this->container['memo'];
    }

    /**
     * Sets memo
     *
     * @param string|null $memo 备注
     *
     * @return self
     */
    public function setMemo($memo)
    {
        $this->container['memo'] = $memo;

        return $this;
    }

    /**
     * Gets packageCode
     *
     * @return string|null
     */
    public function getPackageCode()
    {
        return $this->container['packageCode'];
    }

    /**
     * Sets packageCode
     *
     * @param string|null $packageCode 功能code，通过alipay.open.app.api.query接口查询获得
     *
     * @return self
     */
    public function setPackageCode($packageCode)
    {
        $this->container['packageCode'] = $packageCode;

        return $this;
    }

    /**
     * Gets qpsAnswer
     *
     * @return string|null
     */
    public function getQpsAnswer()
    {
        return $this->container['qpsAnswer'];
    }

    /**
     * Sets qpsAnswer
     *
     * @param string|null $qpsAnswer 接入后一年内预计接口秒级调用量峰值是多少？（最高峰值：1000QPS）
     *
     * @return self
     */
    public function setQpsAnswer($qpsAnswer)
    {
        $this->container['qpsAnswer'] = $qpsAnswer;

        return $this;
    }

    /**
     * Gets sceneCode
     *
     * @return string|null
     */
    public function getSceneCode()
    {
        return $this->container['sceneCode'];
    }

    /**
     * Sets sceneCode
     *
     * @param string|null $sceneCode 场景code，alipay.open.app.api.scene.query 接口查询获得
     *
     * @return self
     */
    public function setSceneCode($sceneCode)
    {
        $this->container['sceneCode'] = $sceneCode;

        return $this;
    }

    /**
     * Gets tinyAppTemplateId
     *
     * @return string|null
     */
    public function getTinyAppTemplateId()
    {
        return $this->container['tinyAppTemplateId'];
    }

    /**
     * Sets tinyAppTemplateId
     *
     * @param string|null $tinyAppTemplateId 当为使用使用模板的小程序申请时可传入所使用的小程序模板id
     *
     * @return self
     */
    public function setTinyAppTemplateId($tinyAppTemplateId)
    {
        $this->container['tinyAppTemplateId'] = $tinyAppTemplateId;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


